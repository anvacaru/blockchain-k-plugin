// ################################################################################################
// Test that kevm-vm is able to start, receive a Hello and a CallContext mock message and respond 
// with a GetAccount request for each schedule.
// ################################################################################################

const Buffer = require('safe-buffer').Buffer
const net = require('net')
const BN = require('ethereumjs-util').BN
const msg_pb = require('./proto/msg_pb')
const cp = require('child_process')
const tcpPortUsed = require('tcp-port-used')

const kevmHost = '127.0.0.1'
const kevmPort = 8080
const txData = new Uint8Array([96, 128, 96, 64, 82, 52, 128, 21, 97, 0, 16, 87, 96, 0, 128, 253, 91, 80, 96, 64, 81, 96, 64, 128, 97, 17, 108, 131, 57, 129, 1, 128, 96, 64, 82, 96, 64, 129, 16, 21, 97, 0, 48, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 81, 144, 96, 32, 1, 144, 146, 145, 144, 128, 81, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 0, 100, 130, 130, 97, 0, 107, 100, 1, 0, 0, 0, 0, 2, 100, 1, 0, 0, 0, 0, 144, 4, 86, 91, 80, 80, 97, 1, 250, 86, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 20, 21, 21, 21, 97, 0, 167, 87, 96, 0, 128, 253, 91, 97, 0, 201, 129, 96, 2, 84, 97, 1, 217, 100, 1, 0, 0, 0, 0, 2, 97, 11, 199, 23, 144, 145, 144, 100, 1, 0, 0, 0, 0, 144, 4, 86, 91, 96, 2, 129, 144, 85, 80, 97, 1, 45, 129, 96, 0, 128, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 1, 217, 100, 1, 0, 0, 0, 0, 2, 97, 11, 199, 23, 144, 145, 144, 100, 1, 0, 0, 0, 0, 144, 4, 86, 91, 96, 0, 128, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 129, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 131, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 86, 91, 96, 0, 128, 130, 132, 1, 144, 80, 131, 129, 16, 21, 21, 21, 97, 1, 240, 87, 96, 0, 128, 253, 91, 128, 145, 80, 80, 146, 145, 80, 80, 86, 91, 97, 15, 99, 128, 97, 2, 9, 96, 0, 57, 96, 0, 243, 254, 96, 128, 96, 64, 82, 52, 128, 21, 97, 0, 16, 87, 96, 0, 128, 253, 91, 80, 96, 4, 54, 16, 97, 0, 209, 87, 96, 0, 53, 124, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 4, 128, 99, 112, 160, 130, 49, 17, 97, 0, 142, 87, 128, 99, 112, 160, 130, 49, 20, 97, 3, 2, 87, 128, 99, 121, 204, 103, 144, 20, 97, 3, 90, 87, 128, 99, 157, 194, 159, 172, 20, 97, 3, 168, 87, 128, 99, 164, 87, 194, 215, 20, 97, 3, 246, 87, 128, 99, 169, 5, 156, 187, 20, 97, 4, 92, 87, 128, 99, 221, 98, 237, 62, 20, 97, 4, 194, 87, 97, 0, 209, 86, 91, 128, 99, 9, 94, 167, 179, 20, 97, 0, 214, 87, 128, 99, 24, 22, 13, 221, 20, 97, 1, 60, 87, 128, 99, 35, 184, 114, 221, 20, 97, 1, 90, 87, 128, 99, 57, 80, 147, 81, 20, 97, 1, 224, 87, 128, 99, 64, 193, 15, 25, 20, 97, 2, 70, 87, 128, 99, 86, 24, 156, 180, 20, 97, 2, 148, 87, 91, 96, 0, 128, 253, 91, 97, 1, 34, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 0, 236, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 5, 58, 86, 91, 96, 64, 81, 128, 130, 21, 21, 21, 21, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 68, 97, 5, 81, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 198, 96, 4, 128, 54, 3, 96, 96, 129, 16, 21, 97, 1, 112, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 5, 91, 86, 91, 96, 64, 81, 128, 130, 21, 21, 21, 21, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 2, 44, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 1, 246, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 6, 12, 86, 91, 96, 64, 81, 128, 130, 21, 21, 21, 21, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 2, 146, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 2, 92, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 6, 177, 86, 91, 0, 91, 97, 3, 0, 96, 4, 128, 54, 3, 96, 96, 129, 16, 21, 97, 2, 170, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 6, 191, 86, 91, 0, 91, 97, 3, 68, 96, 4, 128, 54, 3, 96, 32, 129, 16, 21, 97, 3, 24, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 6, 207, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 3, 166, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 3, 112, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 7, 23, 86, 91, 0, 91, 97, 3, 244, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 3, 190, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 7, 37, 86, 91, 0, 91, 97, 4, 66, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 4, 12, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 7, 51, 86, 91, 96, 64, 81, 128, 130, 21, 21, 21, 21, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 4, 168, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 4, 114, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 7, 216, 86, 91, 96, 64, 81, 128, 130, 21, 21, 21, 21, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 5, 36, 96, 4, 128, 54, 3, 96, 64, 129, 16, 21, 97, 4, 216, 87, 96, 0, 128, 253, 91, 129, 1, 144, 128, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 7, 239, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 96, 0, 97, 5, 71, 51, 132, 132, 97, 8, 118, 86, 91, 96, 1, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 96, 2, 84, 144, 80, 144, 86, 91, 96, 0, 97, 5, 104, 132, 132, 132, 97, 9, 217, 86, 91, 97, 6, 1, 132, 51, 97, 5, 252, 133, 96, 1, 96, 0, 138, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 165, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 97, 8, 118, 86, 91, 96, 1, 144, 80, 147, 146, 80, 80, 80, 86, 91, 96, 0, 97, 6, 167, 51, 132, 97, 6, 162, 133, 96, 1, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 137, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 199, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 97, 8, 118, 86, 91, 96, 1, 144, 80, 146, 145, 80, 80, 86, 91, 97, 6, 187, 130, 130, 97, 11, 232, 86, 91, 80, 80, 86, 91, 97, 6, 202, 131, 131, 131, 97, 8, 118, 86, 91, 80, 80, 80, 86, 91, 96, 0, 128, 96, 0, 131, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 144, 80, 145, 144, 80, 86, 91, 97, 7, 33, 130, 130, 97, 13, 60, 86, 91, 80, 80, 86, 91, 97, 7, 47, 130, 130, 97, 13, 227, 86, 91, 80, 80, 86, 91, 96, 0, 97, 7, 206, 51, 132, 97, 7, 201, 133, 96, 1, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 137, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 165, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 97, 8, 118, 86, 91, 96, 1, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 97, 7, 229, 51, 132, 132, 97, 9, 217, 86, 91, 96, 1, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 96, 1, 96, 0, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 131, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 20, 21, 21, 21, 97, 8, 178, 87, 96, 0, 128, 253, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 131, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 20, 21, 21, 21, 97, 8, 238, 87, 96, 0, 128, 253, 91, 128, 96, 1, 96, 0, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 129, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 131, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 140, 91, 225, 229, 235, 236, 125, 91, 209, 79, 113, 66, 125, 30, 132, 243, 221, 3, 20, 192, 247, 178, 41, 30, 91, 32, 10, 200, 199, 195, 185, 37, 131, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 80, 86, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 20, 21, 21, 21, 97, 10, 21, 87, 96, 0, 128, 253, 91, 97, 10, 102, 129, 96, 0, 128, 134, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 165, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 96, 0, 128, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 97, 10, 249, 129, 96, 0, 128, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 199, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 96, 0, 128, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 129, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 131, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 131, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 80, 86, 91, 96, 0, 130, 130, 17, 21, 21, 21, 97, 11, 182, 87, 96, 0, 128, 253, 91, 96, 0, 130, 132, 3, 144, 80, 128, 145, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 128, 130, 132, 1, 144, 80, 131, 129, 16, 21, 21, 21, 97, 11, 222, 87, 96, 0, 128, 253, 91, 128, 145, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 20, 21, 21, 21, 97, 12, 36, 87, 96, 0, 128, 253, 91, 97, 12, 57, 129, 96, 2, 84, 97, 11, 199, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 96, 2, 129, 144, 85, 80, 97, 12, 144, 129, 96, 0, 128, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 199, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 96, 0, 128, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 129, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 131, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 86, 91, 97, 13, 70, 130, 130, 97, 13, 227, 86, 91, 97, 13, 223, 130, 51, 97, 13, 218, 132, 96, 1, 96, 0, 136, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 165, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 97, 8, 118, 86, 91, 80, 80, 86, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 20, 21, 21, 21, 97, 14, 31, 87, 96, 0, 128, 253, 91, 97, 14, 52, 129, 96, 2, 84, 97, 11, 165, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 96, 2, 129, 144, 85, 80, 97, 14, 139, 129, 96, 0, 128, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 97, 11, 165, 144, 145, 144, 99, 255, 255, 255, 255, 22, 86, 91, 96, 0, 128, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 131, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 86, 254, 161, 101, 98, 122, 122, 114, 48, 88, 32, 146, 75, 16, 146, 107, 163, 176, 175, 76, 90, 158, 235, 72, 106, 173, 11, 140, 254, 98, 79, 44, 206, 170, 215, 163, 118, 43, 91, 182, 182, 57, 126, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 245, 71, 163, 145, 183, 63, 77, 245, 58, 5, 137, 196, 80, 136, 2, 17, 128, 189, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100])
const caller = new Uint8Array([171, 171, 243, 209, 240, 24, 100, 196, 186, 249, 58, 7, 40, 203, 139, 202, 187, 56, 135, 232])
const callValue = new Uint8Array([0,0])
const gasLimit = new Uint8Array([102,145,183])
const gasProvided = new Uint8Array([102,145,183])
const gasPrice = new Uint8Array([4,168,23,200,0])
const coinbase = new Uint8Array(20)
const difficulty = new Uint8Array(0)
const number = new Uint8Array([1])
const timestamp = 1559296292
const zero = new Uint8Array([0])
const largeBlockNumber = new Uint8Array([127, 255, 255, 255])
const maxCodeSize = new Uint8Array([96, 0])
const retryTimeMs = 500
const timeOutMs = 4000

var dataReceived = false
var schedule = 0

if(undefined !== process.argv[2]){
  var kevmPath = process.argv[2]
}
else{
  process.exit(1)
}
runScheduleTest(schedule)

function runScheduleTest(schedule){

  var child = cp.spawn(kevmPath, [kevmPort, kevmHost])
  var hello = Buffer([0,0,0,5,10,3,50,46,48])

  child.on('exit', function (code, signal) {
    if('SIGTERM' !== signal || false === dataReceived){
      process.exit(1)
    }
    if(schedule < 7){
      schedule += 1
      runScheduleTest(schedule)
    }
    else{
      process.exit()
    }
  })
  client = new net.Socket()
  tcpPortUsed.waitUntilUsed(kevmPort, retryTimeMs, timeOutMs)
  .then(function () {
    client.connect(kevmPort, kevmHost, function () {
      client.write(hello)
      var callCtx = createCallContext(schedule)
      client.write(callCtx)
    })
  }, function(err) {
      console.log('Error:', err.message)
      process.exit(1)
  })

  client.on('data', function (data) {
    var query = msg_pb.VMQuery.deserializeBinary(data)
    if (1 == query.getQueryCase()){
      dataReceived = true
      client.destroy()
      child.kill()
    }
   })
  
  client.on('close', function () {})
}

function createCallContext (schedule) {
  var callCtx = new msg_pb.CallContext()
  var blockHeader = createBlockHeader()
  var ethereumConfig = createEthereumConfig(schedule)
  callCtx.setCalleraddr(caller)
  callCtx.setInputdata(txData)
  callCtx.setCallvalue(callValue)
  callCtx.setGasprice(gasPrice)
  callCtx.setGasprovided(gasProvided)
  callCtx.setBlockheader(blockHeader)
  callCtx.setEthereumconfig(ethereumConfig)
  var bytes = callCtx.serializeBinary()
  var buffer = createBufferFromBytes(bytes)
  return buffer
}

function createBlockHeader () {
  var blockHeader = new msg_pb.BlockHeader()
  blockHeader.setBeneficiary(coinbase)
  blockHeader.setDifficulty(difficulty)
  blockHeader.setNumber(number)
  blockHeader.setGaslimit(gasLimit)
  blockHeader.setUnixtimestamp(timestamp)
  return blockHeader
}

function createEthereumConfig (schedule) {
  var ethereumConfig = new msg_pb.EthereumConfig()
  ethereumConfig.setMaxcodesize(maxCodeSize)
  ethereumConfig.setAccountstartnonce(zero)
  ethereumConfig.setFrontierblocknumber(zero)
  switch (schedule) {
    case 0:{ // frontier
      ethereumConfig.setHomesteadblocknumber(largeBlockNumber)
      ethereumConfig.setEip150blocknumber(largeBlockNumber)
      ethereumConfig.setEip160blocknumber(largeBlockNumber)
      ethereumConfig.setEip161blocknumber(largeBlockNumber)
      ethereumConfig.setByzantiumblocknumber(largeBlockNumber)
      ethereumConfig.setConstantinopleblocknumber(largeBlockNumber)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 1:{ // homestead
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(largeBlockNumber)
      ethereumConfig.setEip160blocknumber(largeBlockNumber)
      ethereumConfig.setEip161blocknumber(largeBlockNumber)
      ethereumConfig.setByzantiumblocknumber(largeBlockNumber)
      ethereumConfig.setConstantinopleblocknumber(largeBlockNumber)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 2:{ // eip150
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(zero)
      ethereumConfig.setEip160blocknumber(largeBlockNumber)
      ethereumConfig.setEip161blocknumber(largeBlockNumber)
      ethereumConfig.setByzantiumblocknumber(largeBlockNumber)
      ethereumConfig.setConstantinopleblocknumber(largeBlockNumber)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 3:{ // eip160
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(zero)
      ethereumConfig.setEip160blocknumber(zero)
      ethereumConfig.setEip161blocknumber(largeBlockNumber)
      ethereumConfig.setByzantiumblocknumber(largeBlockNumber)
      ethereumConfig.setConstantinopleblocknumber(largeBlockNumber)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 4:{ // eip161
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(zero)
      ethereumConfig.setEip160blocknumber(zero)
      ethereumConfig.setEip161blocknumber(zero)
      ethereumConfig.setByzantiumblocknumber(largeBlockNumber)
      ethereumConfig.setConstantinopleblocknumber(largeBlockNumber)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 5: { // byzantium
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(zero)
      ethereumConfig.setEip160blocknumber(zero)
      ethereumConfig.setEip161blocknumber(zero)
      ethereumConfig.setByzantiumblocknumber(zero)
      ethereumConfig.setConstantinopleblocknumber(largeBlockNumber)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 6: { // constantinople
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(zero)
      ethereumConfig.setEip160blocknumber(zero)
      ethereumConfig.setEip161blocknumber(zero)
      ethereumConfig.setByzantiumblocknumber(zero)
      ethereumConfig.setConstantinopleblocknumber(zero)
      ethereumConfig.setPetersburgblocknumber(largeBlockNumber)
      break
    }
    case 7 : { // petersburg
      ethereumConfig.setHomesteadblocknumber(zero)
      ethereumConfig.setEip150blocknumber(zero)
      ethereumConfig.setEip160blocknumber(zero)
      ethereumConfig.setEip161blocknumber(zero)
      ethereumConfig.setByzantiumblocknumber(zero)
      ethereumConfig.setConstantinopleblocknumber(zero)
      ethereumConfig.setPetersburgblocknumber(zero)
      break
    }
  }
  return ethereumConfig
}

function createBufferFromBytes (bytes) {
  var messageLength = new BN(bytes.length)
  var bufferLength = bytes.length + 4
  var result = new Uint8Array(bufferLength)
  var lengthInBytes = messageLength.toArrayLike(Uint8Array, 'be', 4)
  for (var i = 0; i < 4; i++) {
    result[i] = lengthInBytes[i]
  }
  for (i = 0; i < bytes.length; i++) {
    result[i + 4] = bytes[i]
  }
  return new Buffer(result)
}