// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace org {
namespace kframework {
namespace kevm {
namespace extvm {

namespace {

const ::google::protobuf::Descriptor* Hello_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Hello_reflection_ = NULL;
struct HelloOneofInstance {
  const ::org::kframework::kevm::extvm::EthereumConfig* ethereumconfig_;
  const ::org::kframework::kevm::extvm::IeleConfig* ieleconfig_;
}* Hello_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* CallContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallContext_reflection_ = NULL;
struct CallContextOneofInstance {
  const ::org::kframework::kevm::extvm::EthereumConfig* ethereumconfig_;
  const ::org::kframework::kevm::extvm::IeleConfig* ieleconfig_;
}* CallContext_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* BlockHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* EthereumConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EthereumConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* IeleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IeleConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* Account_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Account_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStorageData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStorageData_reflection_ = NULL;
const ::google::protobuf::Descriptor* StorageData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StorageData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* Code_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Code_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBlockhash_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBlockhash_reflection_ = NULL;
const ::google::protobuf::Descriptor* Blockhash_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Blockhash_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifiedAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifiedAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* StorageUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StorageUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* VMQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VMQuery_reflection_ = NULL;
struct VMQueryOneofInstance {
  const ::org::kframework::kevm::extvm::GetAccount* getaccount_;
  const ::org::kframework::kevm::extvm::GetStorageData* getstoragedata_;
  const ::org::kframework::kevm::extvm::GetCode* getcode_;
  const ::org::kframework::kevm::extvm::GetBlockhash* getblockhash_;
  const ::org::kframework::kevm::extvm::CallResult* callresult_;
}* VMQuery_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fmsg_2eproto() {
  protobuf_AddDesc_proto_2fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/msg.proto");
  GOOGLE_CHECK(file != NULL);
  Hello_descriptor_ = file->message_type(0);
  static const int Hello_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello, version_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Hello_default_oneof_instance_, ethereumconfig_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Hello_default_oneof_instance_, ieleconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello, config_),
  };
  Hello_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Hello_descriptor_,
      Hello::default_instance_,
      Hello_offsets_,
      -1,
      -1,
      -1,
      Hello_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello, _oneof_case_[0]),
      sizeof(Hello),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello, _is_default_instance_));
  CallContext_descriptor_ = file->message_type(1);
  static const int CallContext_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, calleraddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, recipientaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, inputdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, callvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, gasprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, gasprovided_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, blockheader_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CallContext_default_oneof_instance_, ethereumconfig_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CallContext_default_oneof_instance_, ieleconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, config_),
  };
  CallContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallContext_descriptor_,
      CallContext::default_instance_,
      CallContext_offsets_,
      -1,
      -1,
      -1,
      CallContext_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, _oneof_case_[0]),
      sizeof(CallContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallContext, _is_default_instance_));
  BlockHeader_descriptor_ = file->message_type(2);
  static const int BlockHeader_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, beneficiary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, difficulty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, gaslimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, unixtimestamp_),
  };
  BlockHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlockHeader_descriptor_,
      BlockHeader::default_instance_,
      BlockHeader_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlockHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockHeader, _is_default_instance_));
  EthereumConfig_descriptor_ = file->message_type(3);
  static const int EthereumConfig_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, frontierblocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, homesteadblocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, eip150blocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, eip160blocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, eip161blocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, maxcodesize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, accountstartnonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, byzantiumblocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, constantinopleblocknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, petersburgblocknumber_),
  };
  EthereumConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EthereumConfig_descriptor_,
      EthereumConfig::default_instance_,
      EthereumConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(EthereumConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EthereumConfig, _is_default_instance_));
  IeleConfig_descriptor_ = file->message_type(4);
  static const int IeleConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IeleConfig, danseblocknumber_),
  };
  IeleConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IeleConfig_descriptor_,
      IeleConfig::default_instance_,
      IeleConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(IeleConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IeleConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IeleConfig, _is_default_instance_));
  GetAccount_descriptor_ = file->message_type(5);
  static const int GetAccount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccount, address_),
  };
  GetAccount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetAccount_descriptor_,
      GetAccount::default_instance_,
      GetAccount_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetAccount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccount, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAccount, _is_default_instance_));
  Account_descriptor_ = file->message_type(6);
  static const int Account_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, nonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, codeempty_),
  };
  Account_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Account_descriptor_,
      Account::default_instance_,
      Account_offsets_,
      -1,
      -1,
      -1,
      sizeof(Account),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Account, _is_default_instance_));
  GetStorageData_descriptor_ = file->message_type(7);
  static const int GetStorageData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStorageData, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStorageData, offset_),
  };
  GetStorageData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetStorageData_descriptor_,
      GetStorageData::default_instance_,
      GetStorageData_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetStorageData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStorageData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStorageData, _is_default_instance_));
  StorageData_descriptor_ = file->message_type(8);
  static const int StorageData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageData, data_),
  };
  StorageData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StorageData_descriptor_,
      StorageData::default_instance_,
      StorageData_offsets_,
      -1,
      -1,
      -1,
      sizeof(StorageData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageData, _is_default_instance_));
  GetCode_descriptor_ = file->message_type(9);
  static const int GetCode_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCode, address_),
  };
  GetCode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCode_descriptor_,
      GetCode::default_instance_,
      GetCode_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCode, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCode, _is_default_instance_));
  Code_descriptor_ = file->message_type(10);
  static const int Code_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, code_),
  };
  Code_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Code_descriptor_,
      Code::default_instance_,
      Code_offsets_,
      -1,
      -1,
      -1,
      sizeof(Code),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, _is_default_instance_));
  GetBlockhash_descriptor_ = file->message_type(11);
  static const int GetBlockhash_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockhash, offset_),
  };
  GetBlockhash_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBlockhash_descriptor_,
      GetBlockhash::default_instance_,
      GetBlockhash_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBlockhash),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockhash, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockhash, _is_default_instance_));
  Blockhash_descriptor_ = file->message_type(12);
  static const int Blockhash_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Blockhash, hash_),
  };
  Blockhash_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Blockhash_descriptor_,
      Blockhash::default_instance_,
      Blockhash_offsets_,
      -1,
      -1,
      -1,
      sizeof(Blockhash),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Blockhash, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Blockhash, _is_default_instance_));
  CallResult_descriptor_ = file->message_type(13);
  static const int CallResult_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, returndata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, returncode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, gasremaining_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, gasrefund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, modifiedaccounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, deletedaccounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, touchedaccounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, logs_),
  };
  CallResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallResult_descriptor_,
      CallResult::default_instance_,
      CallResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(CallResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallResult, _is_default_instance_));
  ModifiedAccount_descriptor_ = file->message_type(14);
  static const int ModifiedAccount_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, nonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, storageupdates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, code_),
  };
  ModifiedAccount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModifiedAccount_descriptor_,
      ModifiedAccount::default_instance_,
      ModifiedAccount_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModifiedAccount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifiedAccount, _is_default_instance_));
  StorageUpdate_descriptor_ = file->message_type(15);
  static const int StorageUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageUpdate, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageUpdate, data_),
  };
  StorageUpdate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StorageUpdate_descriptor_,
      StorageUpdate::default_instance_,
      StorageUpdate_offsets_,
      -1,
      -1,
      -1,
      sizeof(StorageUpdate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageUpdate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageUpdate, _is_default_instance_));
  LogEntry_descriptor_ = file->message_type(16);
  static const int LogEntry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, topics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, data_),
  };
  LogEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogEntry_descriptor_,
      LogEntry::default_instance_,
      LogEntry_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, _is_default_instance_));
  VMQuery_descriptor_ = file->message_type(17);
  static const int VMQuery_offsets_[6] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(VMQuery_default_oneof_instance_, getaccount_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(VMQuery_default_oneof_instance_, getstoragedata_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(VMQuery_default_oneof_instance_, getcode_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(VMQuery_default_oneof_instance_, getblockhash_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(VMQuery_default_oneof_instance_, callresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VMQuery, query_),
  };
  VMQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VMQuery_descriptor_,
      VMQuery::default_instance_,
      VMQuery_offsets_,
      -1,
      -1,
      -1,
      VMQuery_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VMQuery, _oneof_case_[0]),
      sizeof(VMQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VMQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VMQuery, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Hello_descriptor_, &Hello::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallContext_descriptor_, &CallContext::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlockHeader_descriptor_, &BlockHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EthereumConfig_descriptor_, &EthereumConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IeleConfig_descriptor_, &IeleConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetAccount_descriptor_, &GetAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Account_descriptor_, &Account::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetStorageData_descriptor_, &GetStorageData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StorageData_descriptor_, &StorageData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCode_descriptor_, &GetCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Code_descriptor_, &Code::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBlockhash_descriptor_, &GetBlockhash::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Blockhash_descriptor_, &Blockhash::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallResult_descriptor_, &CallResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModifiedAccount_descriptor_, &ModifiedAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StorageUpdate_descriptor_, &StorageUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogEntry_descriptor_, &LogEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VMQuery_descriptor_, &VMQuery::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fmsg_2eproto() {
  delete Hello::default_instance_;
  delete Hello_default_oneof_instance_;
  delete Hello_reflection_;
  delete CallContext::default_instance_;
  delete CallContext_default_oneof_instance_;
  delete CallContext_reflection_;
  delete BlockHeader::default_instance_;
  delete BlockHeader_reflection_;
  delete EthereumConfig::default_instance_;
  delete EthereumConfig_reflection_;
  delete IeleConfig::default_instance_;
  delete IeleConfig_reflection_;
  delete GetAccount::default_instance_;
  delete GetAccount_reflection_;
  delete Account::default_instance_;
  delete Account_reflection_;
  delete GetStorageData::default_instance_;
  delete GetStorageData_reflection_;
  delete StorageData::default_instance_;
  delete StorageData_reflection_;
  delete GetCode::default_instance_;
  delete GetCode_reflection_;
  delete Code::default_instance_;
  delete Code_reflection_;
  delete GetBlockhash::default_instance_;
  delete GetBlockhash_reflection_;
  delete Blockhash::default_instance_;
  delete Blockhash_reflection_;
  delete CallResult::default_instance_;
  delete CallResult_reflection_;
  delete ModifiedAccount::default_instance_;
  delete ModifiedAccount_reflection_;
  delete StorageUpdate::default_instance_;
  delete StorageUpdate_reflection_;
  delete LogEntry::default_instance_;
  delete LogEntry_reflection_;
  delete VMQuery::default_instance_;
  delete VMQuery_default_oneof_instance_;
  delete VMQuery_reflection_;
}

void protobuf_AddDesc_proto_2fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017proto/msg.proto\022\031org.kframework.kevm.e"
    "xtvm\"\244\001\n\005Hello\022\017\n\007version\030\001 \001(\t\022C\n\016ether"
    "eumConfig\030\002 \001(\0132).org.kframework.kevm.ex"
    "tvm.EthereumConfigH\000\022;\n\nieleConfig\030\003 \001(\013"
    "2%.org.kframework.kevm.extvm.IeleConfigH"
    "\000B\010\n\006config\"\316\002\n\013CallContext\022\022\n\ncallerAdd"
    "r\030\001 \001(\014\022\025\n\rrecipientAddr\030\002 \001(\014\022\021\n\tinputD"
    "ata\030\003 \001(\014\022\021\n\tcallValue\030\004 \001(\014\022\020\n\010gasPrice"
    "\030\005 \001(\014\022\023\n\013gasProvided\030\006 \001(\014\022;\n\013blockHead"
    "er\030\007 \001(\0132&.org.kframework.kevm.extvm.Blo"
    "ckHeader\022C\n\016ethereumConfig\030\010 \001(\0132).org.k"
    "framework.kevm.extvm.EthereumConfigH\000\022;\n"
    "\nieleConfig\030\t \001(\0132%.org.kframework.kevm."
    "extvm.IeleConfigH\000B\010\n\006config\"o\n\013BlockHea"
    "der\022\023\n\013beneficiary\030\001 \001(\014\022\022\n\ndifficulty\030\002"
    " \001(\014\022\016\n\006number\030\003 \001(\014\022\020\n\010gasLimit\030\004 \001(\014\022\025"
    "\n\runixTimestamp\030\005 \001(\003\"\254\002\n\016EthereumConfig"
    "\022\033\n\023frontierBlockNumber\030\001 \001(\014\022\034\n\024homeste"
    "adBlockNumber\030\002 \001(\014\022\031\n\021eip150BlockNumber"
    "\030\003 \001(\014\022\031\n\021eip160BlockNumber\030\004 \001(\014\022\031\n\021eip"
    "161BlockNumber\030\005 \001(\014\022\023\n\013maxCodeSize\030\006 \001("
    "\014\022\031\n\021accountStartNonce\030\007 \001(\014\022\034\n\024byzantiu"
    "mBlockNumber\030\010 \001(\014\022!\n\031constantinopleBloc"
    "kNumber\030\t \001(\014\022\035\n\025petersburgBlockNumber\030\n"
    " \001(\014\"&\n\nIeleConfig\022\030\n\020danseBlockNumber\030\001"
    " \001(\014\"\035\n\nGetAccount\022\017\n\007address\030\001 \001(\014\"<\n\007A"
    "ccount\022\r\n\005nonce\030\001 \001(\014\022\017\n\007balance\030\002 \001(\014\022\021"
    "\n\tcodeEmpty\030\003 \001(\010\"1\n\016GetStorageData\022\017\n\007a"
    "ddress\030\001 \001(\014\022\016\n\006offset\030\002 \001(\014\"\033\n\013StorageD"
    "ata\022\014\n\004data\030\001 \001(\014\"\032\n\007GetCode\022\017\n\007address\030"
    "\001 \001(\014\"\024\n\004Code\022\014\n\004code\030\001 \001(\014\"\036\n\014GetBlockh"
    "ash\022\016\n\006offset\030\001 \001(\005\"\031\n\tBlockhash\022\014\n\004hash"
    "\030\001 \001(\014\"\227\002\n\nCallResult\022\022\n\nreturnData\030\001 \001("
    "\014\022\022\n\nreturnCode\030\002 \001(\014\022\024\n\014gasRemaining\030\003 "
    "\001(\014\022\021\n\tgasRefund\030\004 \001(\014\022\r\n\005error\030\005 \001(\010\022D\n"
    "\020modifiedAccounts\030\006 \003(\0132*.org.kframework"
    ".kevm.extvm.ModifiedAccount\022\027\n\017deletedAc"
    "counts\030\007 \003(\014\022\027\n\017touchedAccounts\030\010 \003(\014\0221\n"
    "\004logs\030\t \003(\0132#.org.kframework.kevm.extvm."
    "LogEntry\"\222\001\n\017ModifiedAccount\022\017\n\007address\030"
    "\001 \001(\014\022\r\n\005nonce\030\002 \001(\014\022\017\n\007balance\030\003 \001(\014\022@\n"
    "\016storageUpdates\030\004 \003(\0132(.org.kframework.k"
    "evm.extvm.StorageUpdate\022\014\n\004code\030\005 \001(\014\"-\n"
    "\rStorageUpdate\022\016\n\006offset\030\001 \001(\014\022\014\n\004data\030\002"
    " \001(\014\"9\n\010LogEntry\022\017\n\007address\030\001 \001(\014\022\016\n\006top"
    "ics\030\002 \003(\014\022\014\n\004data\030\003 \001(\014\"\311\002\n\007VMQuery\022;\n\ng"
    "etAccount\030\001 \001(\0132%.org.kframework.kevm.ex"
    "tvm.GetAccountH\000\022C\n\016getStorageData\030\002 \001(\013"
    "2).org.kframework.kevm.extvm.GetStorageD"
    "ataH\000\0225\n\007getCode\030\003 \001(\0132\".org.kframework."
    "kevm.extvm.GetCodeH\000\022\?\n\014getBlockhash\030\004 \001"
    "(\0132\'.org.kframework.kevm.extvm.GetBlockh"
    "ashH\000\022;\n\ncallResult\030\005 \001(\0132%.org.kframewo"
    "rk.kevm.extvm.CallResultH\000B\007\n\005queryb\006pro"
    "to3", 2163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/msg.proto", &protobuf_RegisterTypes);
  Hello::default_instance_ = new Hello();
  Hello_default_oneof_instance_ = new HelloOneofInstance();
  CallContext::default_instance_ = new CallContext();
  CallContext_default_oneof_instance_ = new CallContextOneofInstance();
  BlockHeader::default_instance_ = new BlockHeader();
  EthereumConfig::default_instance_ = new EthereumConfig();
  IeleConfig::default_instance_ = new IeleConfig();
  GetAccount::default_instance_ = new GetAccount();
  Account::default_instance_ = new Account();
  GetStorageData::default_instance_ = new GetStorageData();
  StorageData::default_instance_ = new StorageData();
  GetCode::default_instance_ = new GetCode();
  Code::default_instance_ = new Code();
  GetBlockhash::default_instance_ = new GetBlockhash();
  Blockhash::default_instance_ = new Blockhash();
  CallResult::default_instance_ = new CallResult();
  ModifiedAccount::default_instance_ = new ModifiedAccount();
  StorageUpdate::default_instance_ = new StorageUpdate();
  LogEntry::default_instance_ = new LogEntry();
  VMQuery::default_instance_ = new VMQuery();
  VMQuery_default_oneof_instance_ = new VMQueryOneofInstance();
  Hello::default_instance_->InitAsDefaultInstance();
  CallContext::default_instance_->InitAsDefaultInstance();
  BlockHeader::default_instance_->InitAsDefaultInstance();
  EthereumConfig::default_instance_->InitAsDefaultInstance();
  IeleConfig::default_instance_->InitAsDefaultInstance();
  GetAccount::default_instance_->InitAsDefaultInstance();
  Account::default_instance_->InitAsDefaultInstance();
  GetStorageData::default_instance_->InitAsDefaultInstance();
  StorageData::default_instance_->InitAsDefaultInstance();
  GetCode::default_instance_->InitAsDefaultInstance();
  Code::default_instance_->InitAsDefaultInstance();
  GetBlockhash::default_instance_->InitAsDefaultInstance();
  Blockhash::default_instance_->InitAsDefaultInstance();
  CallResult::default_instance_->InitAsDefaultInstance();
  ModifiedAccount::default_instance_->InitAsDefaultInstance();
  StorageUpdate::default_instance_->InitAsDefaultInstance();
  LogEntry::default_instance_->InitAsDefaultInstance();
  VMQuery::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fmsg_2eproto {
  StaticDescriptorInitializer_proto_2fmsg_2eproto() {
    protobuf_AddDesc_proto_2fmsg_2eproto();
  }
} static_descriptor_initializer_proto_2fmsg_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hello::kVersionFieldNumber;
const int Hello::kEthereumConfigFieldNumber;
const int Hello::kIeleConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hello::Hello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.Hello)
}

void Hello::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Hello_default_oneof_instance_->ethereumconfig_ = const_cast< ::org::kframework::kevm::extvm::EthereumConfig*>(&::org::kframework::kevm::extvm::EthereumConfig::default_instance());
  Hello_default_oneof_instance_->ieleconfig_ = const_cast< ::org::kframework::kevm::extvm::IeleConfig*>(&::org::kframework::kevm::extvm::IeleConfig::default_instance());
}

Hello::Hello(const Hello& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.Hello)
}

void Hello::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config();
}

Hello::~Hello() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.Hello)
  SharedDtor();
}

void Hello::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_config()) {
    clear_config();
  }
  if (this != default_instance_) {
  }
}

void Hello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hello::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Hello_descriptor_;
}

const Hello& Hello::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

Hello* Hello::default_instance_ = NULL;

Hello* Hello::New(::google::protobuf::Arena* arena) const {
  Hello* n = new Hello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Hello::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:org.kframework.kevm.extvm.Hello)
  switch(config_case()) {
    case kEthereumConfig: {
      delete config_.ethereumconfig_;
      break;
    }
    case kIeleConfig: {
      delete config_.ieleconfig_;
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIG_NOT_SET;
}


void Hello::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.Hello)
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_config();
}

bool Hello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.Hello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.kframework.kevm.extvm.Hello.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ethereumConfig;
        break;
      }

      // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ethereumConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ethereumconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ieleConfig;
        break;
      }

      // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 3;
      case 3: {
        if (tag == 26) {
         parse_ieleConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ieleconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.Hello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.Hello)
  return false;
#undef DO_
}

void Hello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.Hello)
  // optional string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.kframework.kevm.extvm.Hello.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 2;
  if (has_ethereumconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *config_.ethereumconfig_, output);
  }

  // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 3;
  if (has_ieleconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *config_.ieleconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.Hello)
}

::google::protobuf::uint8* Hello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.Hello)
  // optional string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.kframework.kevm.extvm.Hello.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 2;
  if (has_ethereumconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *config_.ethereumconfig_, false, target);
  }

  // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 3;
  if (has_ieleconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *config_.ieleconfig_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.Hello)
  return target;
}

int Hello::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.Hello)
  int total_size = 0;

  // optional string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  switch (config_case()) {
    // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 2;
    case kEthereumConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *config_.ethereumconfig_);
      break;
    }
    // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 3;
    case kIeleConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *config_.ieleconfig_);
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.Hello)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Hello* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Hello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.Hello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.Hello)
    MergeFrom(*source);
  }
}

void Hello::MergeFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.Hello)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.config_case()) {
    case kEthereumConfig: {
      mutable_ethereumconfig()->::org::kframework::kevm::extvm::EthereumConfig::MergeFrom(from.ethereumconfig());
      break;
    }
    case kIeleConfig: {
      mutable_ieleconfig()->::org::kframework::kevm::extvm::IeleConfig::MergeFrom(from.ieleconfig());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void Hello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hello::CopyFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hello::IsInitialized() const {

  return true;
}

void Hello::Swap(Hello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hello::InternalSwap(Hello* other) {
  version_.Swap(&other->version_);
  std::swap(config_, other->config_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Hello::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Hello_descriptor_;
  metadata.reflection = Hello_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Hello

// optional string version = 1;
void Hello::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Hello::version() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Hello.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Hello::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.Hello.version)
}
 void Hello::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.Hello.version)
}
 void Hello::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.Hello.version)
}
 ::std::string* Hello::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Hello.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Hello::release_version() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Hello.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Hello::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Hello.version)
}

// optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 2;
bool Hello::has_ethereumconfig() const {
  return config_case() == kEthereumConfig;
}
void Hello::set_has_ethereumconfig() {
  _oneof_case_[0] = kEthereumConfig;
}
void Hello::clear_ethereumconfig() {
  if (has_ethereumconfig()) {
    delete config_.ethereumconfig_;
    clear_has_config();
  }
}
 const ::org::kframework::kevm::extvm::EthereumConfig& Hello::ethereumconfig() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Hello.ethereumConfig)
  return has_ethereumconfig()
      ? *config_.ethereumconfig_
      : ::org::kframework::kevm::extvm::EthereumConfig::default_instance();
}
::org::kframework::kevm::extvm::EthereumConfig* Hello::mutable_ethereumconfig() {
  if (!has_ethereumconfig()) {
    clear_config();
    set_has_ethereumconfig();
    config_.ethereumconfig_ = new ::org::kframework::kevm::extvm::EthereumConfig;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Hello.ethereumConfig)
  return config_.ethereumconfig_;
}
::org::kframework::kevm::extvm::EthereumConfig* Hello::release_ethereumconfig() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Hello.ethereumConfig)
  if (has_ethereumconfig()) {
    clear_has_config();
    ::org::kframework::kevm::extvm::EthereumConfig* temp = config_.ethereumconfig_;
    config_.ethereumconfig_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Hello::set_allocated_ethereumconfig(::org::kframework::kevm::extvm::EthereumConfig* ethereumconfig) {
  clear_config();
  if (ethereumconfig) {
    set_has_ethereumconfig();
    config_.ethereumconfig_ = ethereumconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Hello.ethereumConfig)
}

// optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 3;
bool Hello::has_ieleconfig() const {
  return config_case() == kIeleConfig;
}
void Hello::set_has_ieleconfig() {
  _oneof_case_[0] = kIeleConfig;
}
void Hello::clear_ieleconfig() {
  if (has_ieleconfig()) {
    delete config_.ieleconfig_;
    clear_has_config();
  }
}
 const ::org::kframework::kevm::extvm::IeleConfig& Hello::ieleconfig() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Hello.ieleConfig)
  return has_ieleconfig()
      ? *config_.ieleconfig_
      : ::org::kframework::kevm::extvm::IeleConfig::default_instance();
}
::org::kframework::kevm::extvm::IeleConfig* Hello::mutable_ieleconfig() {
  if (!has_ieleconfig()) {
    clear_config();
    set_has_ieleconfig();
    config_.ieleconfig_ = new ::org::kframework::kevm::extvm::IeleConfig;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Hello.ieleConfig)
  return config_.ieleconfig_;
}
::org::kframework::kevm::extvm::IeleConfig* Hello::release_ieleconfig() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Hello.ieleConfig)
  if (has_ieleconfig()) {
    clear_has_config();
    ::org::kframework::kevm::extvm::IeleConfig* temp = config_.ieleconfig_;
    config_.ieleconfig_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Hello::set_allocated_ieleconfig(::org::kframework::kevm::extvm::IeleConfig* ieleconfig) {
  clear_config();
  if (ieleconfig) {
    set_has_ieleconfig();
    config_.ieleconfig_ = ieleconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Hello.ieleConfig)
}

bool Hello::has_config() const {
  return config_case() != CONFIG_NOT_SET;
}
void Hello::clear_has_config() {
  _oneof_case_[0] = CONFIG_NOT_SET;
}
Hello::ConfigCase Hello::config_case() const {
  return Hello::ConfigCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallContext::kCallerAddrFieldNumber;
const int CallContext::kRecipientAddrFieldNumber;
const int CallContext::kInputDataFieldNumber;
const int CallContext::kCallValueFieldNumber;
const int CallContext::kGasPriceFieldNumber;
const int CallContext::kGasProvidedFieldNumber;
const int CallContext::kBlockHeaderFieldNumber;
const int CallContext::kEthereumConfigFieldNumber;
const int CallContext::kIeleConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallContext::CallContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.CallContext)
}

void CallContext::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  blockheader_ = const_cast< ::org::kframework::kevm::extvm::BlockHeader*>(&::org::kframework::kevm::extvm::BlockHeader::default_instance());
  CallContext_default_oneof_instance_->ethereumconfig_ = const_cast< ::org::kframework::kevm::extvm::EthereumConfig*>(&::org::kframework::kevm::extvm::EthereumConfig::default_instance());
  CallContext_default_oneof_instance_->ieleconfig_ = const_cast< ::org::kframework::kevm::extvm::IeleConfig*>(&::org::kframework::kevm::extvm::IeleConfig::default_instance());
}

CallContext::CallContext(const CallContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.CallContext)
}

void CallContext::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  calleraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasprice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasprovided_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blockheader_ = NULL;
  clear_has_config();
}

CallContext::~CallContext() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.CallContext)
  SharedDtor();
}

void CallContext::SharedDtor() {
  calleraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasprice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasprovided_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_config()) {
    clear_config();
  }
  if (this != default_instance_) {
    delete blockheader_;
  }
}

void CallContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallContext_descriptor_;
}

const CallContext& CallContext::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

CallContext* CallContext::default_instance_ = NULL;

CallContext* CallContext::New(::google::protobuf::Arena* arena) const {
  CallContext* n = new CallContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallContext::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:org.kframework.kevm.extvm.CallContext)
  switch(config_case()) {
    case kEthereumConfig: {
      delete config_.ethereumconfig_;
      break;
    }
    case kIeleConfig: {
      delete config_.ieleconfig_;
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIG_NOT_SET;
}


void CallContext::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.CallContext)
  calleraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasprovided_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && blockheader_ != NULL) delete blockheader_;
  blockheader_ = NULL;
  clear_config();
}

bool CallContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.CallContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes callerAddr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_calleraddr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_recipientAddr;
        break;
      }

      // optional bytes recipientAddr = 2;
      case 2: {
        if (tag == 18) {
         parse_recipientAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recipientaddr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_inputData;
        break;
      }

      // optional bytes inputData = 3;
      case 3: {
        if (tag == 26) {
         parse_inputData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inputdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_callValue;
        break;
      }

      // optional bytes callValue = 4;
      case 4: {
        if (tag == 34) {
         parse_callValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_callvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_gasPrice;
        break;
      }

      // optional bytes gasPrice = 5;
      case 5: {
        if (tag == 42) {
         parse_gasPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gasprice()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_gasProvided;
        break;
      }

      // optional bytes gasProvided = 6;
      case 6: {
        if (tag == 50) {
         parse_gasProvided:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gasprovided()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_blockHeader;
        break;
      }

      // optional .org.kframework.kevm.extvm.BlockHeader blockHeader = 7;
      case 7: {
        if (tag == 58) {
         parse_blockHeader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blockheader()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_ethereumConfig;
        break;
      }

      // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 8;
      case 8: {
        if (tag == 66) {
         parse_ethereumConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ethereumconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ieleConfig;
        break;
      }

      // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 9;
      case 9: {
        if (tag == 74) {
         parse_ieleConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ieleconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.CallContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.CallContext)
  return false;
#undef DO_
}

void CallContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.CallContext)
  // optional bytes callerAddr = 1;
  if (this->calleraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->calleraddr(), output);
  }

  // optional bytes recipientAddr = 2;
  if (this->recipientaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->recipientaddr(), output);
  }

  // optional bytes inputData = 3;
  if (this->inputdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->inputdata(), output);
  }

  // optional bytes callValue = 4;
  if (this->callvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->callvalue(), output);
  }

  // optional bytes gasPrice = 5;
  if (this->gasprice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->gasprice(), output);
  }

  // optional bytes gasProvided = 6;
  if (this->gasprovided().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->gasprovided(), output);
  }

  // optional .org.kframework.kevm.extvm.BlockHeader blockHeader = 7;
  if (this->has_blockheader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->blockheader_, output);
  }

  // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 8;
  if (has_ethereumconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *config_.ethereumconfig_, output);
  }

  // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 9;
  if (has_ieleconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *config_.ieleconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.CallContext)
}

::google::protobuf::uint8* CallContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.CallContext)
  // optional bytes callerAddr = 1;
  if (this->calleraddr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->calleraddr(), target);
  }

  // optional bytes recipientAddr = 2;
  if (this->recipientaddr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->recipientaddr(), target);
  }

  // optional bytes inputData = 3;
  if (this->inputdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->inputdata(), target);
  }

  // optional bytes callValue = 4;
  if (this->callvalue().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->callvalue(), target);
  }

  // optional bytes gasPrice = 5;
  if (this->gasprice().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->gasprice(), target);
  }

  // optional bytes gasProvided = 6;
  if (this->gasprovided().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->gasprovided(), target);
  }

  // optional .org.kframework.kevm.extvm.BlockHeader blockHeader = 7;
  if (this->has_blockheader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->blockheader_, false, target);
  }

  // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 8;
  if (has_ethereumconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *config_.ethereumconfig_, false, target);
  }

  // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 9;
  if (has_ieleconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *config_.ieleconfig_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.CallContext)
  return target;
}

int CallContext::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.CallContext)
  int total_size = 0;

  // optional bytes callerAddr = 1;
  if (this->calleraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->calleraddr());
  }

  // optional bytes recipientAddr = 2;
  if (this->recipientaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->recipientaddr());
  }

  // optional bytes inputData = 3;
  if (this->inputdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->inputdata());
  }

  // optional bytes callValue = 4;
  if (this->callvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->callvalue());
  }

  // optional bytes gasPrice = 5;
  if (this->gasprice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gasprice());
  }

  // optional bytes gasProvided = 6;
  if (this->gasprovided().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gasprovided());
  }

  // optional .org.kframework.kevm.extvm.BlockHeader blockHeader = 7;
  if (this->has_blockheader()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->blockheader_);
  }

  switch (config_case()) {
    // optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 8;
    case kEthereumConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *config_.ethereumconfig_);
      break;
    }
    // optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 9;
    case kIeleConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *config_.ieleconfig_);
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.CallContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CallContext* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CallContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.CallContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.CallContext)
    MergeFrom(*source);
  }
}

void CallContext::MergeFrom(const CallContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.CallContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.config_case()) {
    case kEthereumConfig: {
      mutable_ethereumconfig()->::org::kframework::kevm::extvm::EthereumConfig::MergeFrom(from.ethereumconfig());
      break;
    }
    case kIeleConfig: {
      mutable_ieleconfig()->::org::kframework::kevm::extvm::IeleConfig::MergeFrom(from.ieleconfig());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  if (from.calleraddr().size() > 0) {

    calleraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.calleraddr_);
  }
  if (from.recipientaddr().size() > 0) {

    recipientaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recipientaddr_);
  }
  if (from.inputdata().size() > 0) {

    inputdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputdata_);
  }
  if (from.callvalue().size() > 0) {

    callvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callvalue_);
  }
  if (from.gasprice().size() > 0) {

    gasprice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gasprice_);
  }
  if (from.gasprovided().size() > 0) {

    gasprovided_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gasprovided_);
  }
  if (from.has_blockheader()) {
    mutable_blockheader()->::org::kframework::kevm::extvm::BlockHeader::MergeFrom(from.blockheader());
  }
}

void CallContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.CallContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallContext::CopyFrom(const CallContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.CallContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallContext::IsInitialized() const {

  return true;
}

void CallContext::Swap(CallContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallContext::InternalSwap(CallContext* other) {
  calleraddr_.Swap(&other->calleraddr_);
  recipientaddr_.Swap(&other->recipientaddr_);
  inputdata_.Swap(&other->inputdata_);
  callvalue_.Swap(&other->callvalue_);
  gasprice_.Swap(&other->gasprice_);
  gasprovided_.Swap(&other->gasprovided_);
  std::swap(blockheader_, other->blockheader_);
  std::swap(config_, other->config_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallContext_descriptor_;
  metadata.reflection = CallContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallContext

// optional bytes callerAddr = 1;
void CallContext::clear_calleraddr() {
  calleraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallContext::calleraddr() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.callerAddr)
  return calleraddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_calleraddr(const ::std::string& value) {
  
  calleraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallContext.callerAddr)
}
 void CallContext::set_calleraddr(const char* value) {
  
  calleraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallContext.callerAddr)
}
 void CallContext::set_calleraddr(const void* value, size_t size) {
  
  calleraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallContext.callerAddr)
}
 ::std::string* CallContext::mutable_calleraddr() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.callerAddr)
  return calleraddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallContext::release_calleraddr() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.callerAddr)
  
  return calleraddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_allocated_calleraddr(::std::string* calleraddr) {
  if (calleraddr != NULL) {
    
  } else {
    
  }
  calleraddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), calleraddr);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.callerAddr)
}

// optional bytes recipientAddr = 2;
void CallContext::clear_recipientaddr() {
  recipientaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallContext::recipientaddr() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.recipientAddr)
  return recipientaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_recipientaddr(const ::std::string& value) {
  
  recipientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallContext.recipientAddr)
}
 void CallContext::set_recipientaddr(const char* value) {
  
  recipientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallContext.recipientAddr)
}
 void CallContext::set_recipientaddr(const void* value, size_t size) {
  
  recipientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallContext.recipientAddr)
}
 ::std::string* CallContext::mutable_recipientaddr() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.recipientAddr)
  return recipientaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallContext::release_recipientaddr() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.recipientAddr)
  
  return recipientaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_allocated_recipientaddr(::std::string* recipientaddr) {
  if (recipientaddr != NULL) {
    
  } else {
    
  }
  recipientaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipientaddr);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.recipientAddr)
}

// optional bytes inputData = 3;
void CallContext::clear_inputdata() {
  inputdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallContext::inputdata() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.inputData)
  return inputdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_inputdata(const ::std::string& value) {
  
  inputdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallContext.inputData)
}
 void CallContext::set_inputdata(const char* value) {
  
  inputdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallContext.inputData)
}
 void CallContext::set_inputdata(const void* value, size_t size) {
  
  inputdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallContext.inputData)
}
 ::std::string* CallContext::mutable_inputdata() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.inputData)
  return inputdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallContext::release_inputdata() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.inputData)
  
  return inputdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_allocated_inputdata(::std::string* inputdata) {
  if (inputdata != NULL) {
    
  } else {
    
  }
  inputdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputdata);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.inputData)
}

// optional bytes callValue = 4;
void CallContext::clear_callvalue() {
  callvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallContext::callvalue() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.callValue)
  return callvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_callvalue(const ::std::string& value) {
  
  callvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallContext.callValue)
}
 void CallContext::set_callvalue(const char* value) {
  
  callvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallContext.callValue)
}
 void CallContext::set_callvalue(const void* value, size_t size) {
  
  callvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallContext.callValue)
}
 ::std::string* CallContext::mutable_callvalue() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.callValue)
  return callvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallContext::release_callvalue() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.callValue)
  
  return callvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_allocated_callvalue(::std::string* callvalue) {
  if (callvalue != NULL) {
    
  } else {
    
  }
  callvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callvalue);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.callValue)
}

// optional bytes gasPrice = 5;
void CallContext::clear_gasprice() {
  gasprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallContext::gasprice() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.gasPrice)
  return gasprice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_gasprice(const ::std::string& value) {
  
  gasprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallContext.gasPrice)
}
 void CallContext::set_gasprice(const char* value) {
  
  gasprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallContext.gasPrice)
}
 void CallContext::set_gasprice(const void* value, size_t size) {
  
  gasprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallContext.gasPrice)
}
 ::std::string* CallContext::mutable_gasprice() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.gasPrice)
  return gasprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallContext::release_gasprice() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.gasPrice)
  
  return gasprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_allocated_gasprice(::std::string* gasprice) {
  if (gasprice != NULL) {
    
  } else {
    
  }
  gasprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gasprice);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.gasPrice)
}

// optional bytes gasProvided = 6;
void CallContext::clear_gasprovided() {
  gasprovided_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallContext::gasprovided() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.gasProvided)
  return gasprovided_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_gasprovided(const ::std::string& value) {
  
  gasprovided_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallContext.gasProvided)
}
 void CallContext::set_gasprovided(const char* value) {
  
  gasprovided_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallContext.gasProvided)
}
 void CallContext::set_gasprovided(const void* value, size_t size) {
  
  gasprovided_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallContext.gasProvided)
}
 ::std::string* CallContext::mutable_gasprovided() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.gasProvided)
  return gasprovided_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallContext::release_gasprovided() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.gasProvided)
  
  return gasprovided_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallContext::set_allocated_gasprovided(::std::string* gasprovided) {
  if (gasprovided != NULL) {
    
  } else {
    
  }
  gasprovided_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gasprovided);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.gasProvided)
}

// optional .org.kframework.kevm.extvm.BlockHeader blockHeader = 7;
bool CallContext::has_blockheader() const {
  return !_is_default_instance_ && blockheader_ != NULL;
}
void CallContext::clear_blockheader() {
  if (GetArenaNoVirtual() == NULL && blockheader_ != NULL) delete blockheader_;
  blockheader_ = NULL;
}
const ::org::kframework::kevm::extvm::BlockHeader& CallContext::blockheader() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.blockHeader)
  return blockheader_ != NULL ? *blockheader_ : *default_instance_->blockheader_;
}
::org::kframework::kevm::extvm::BlockHeader* CallContext::mutable_blockheader() {
  
  if (blockheader_ == NULL) {
    blockheader_ = new ::org::kframework::kevm::extvm::BlockHeader;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.blockHeader)
  return blockheader_;
}
::org::kframework::kevm::extvm::BlockHeader* CallContext::release_blockheader() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.blockHeader)
  
  ::org::kframework::kevm::extvm::BlockHeader* temp = blockheader_;
  blockheader_ = NULL;
  return temp;
}
void CallContext::set_allocated_blockheader(::org::kframework::kevm::extvm::BlockHeader* blockheader) {
  delete blockheader_;
  blockheader_ = blockheader;
  if (blockheader) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.blockHeader)
}

// optional .org.kframework.kevm.extvm.EthereumConfig ethereumConfig = 8;
bool CallContext::has_ethereumconfig() const {
  return config_case() == kEthereumConfig;
}
void CallContext::set_has_ethereumconfig() {
  _oneof_case_[0] = kEthereumConfig;
}
void CallContext::clear_ethereumconfig() {
  if (has_ethereumconfig()) {
    delete config_.ethereumconfig_;
    clear_has_config();
  }
}
 const ::org::kframework::kevm::extvm::EthereumConfig& CallContext::ethereumconfig() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.ethereumConfig)
  return has_ethereumconfig()
      ? *config_.ethereumconfig_
      : ::org::kframework::kevm::extvm::EthereumConfig::default_instance();
}
::org::kframework::kevm::extvm::EthereumConfig* CallContext::mutable_ethereumconfig() {
  if (!has_ethereumconfig()) {
    clear_config();
    set_has_ethereumconfig();
    config_.ethereumconfig_ = new ::org::kframework::kevm::extvm::EthereumConfig;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.ethereumConfig)
  return config_.ethereumconfig_;
}
::org::kframework::kevm::extvm::EthereumConfig* CallContext::release_ethereumconfig() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.ethereumConfig)
  if (has_ethereumconfig()) {
    clear_has_config();
    ::org::kframework::kevm::extvm::EthereumConfig* temp = config_.ethereumconfig_;
    config_.ethereumconfig_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CallContext::set_allocated_ethereumconfig(::org::kframework::kevm::extvm::EthereumConfig* ethereumconfig) {
  clear_config();
  if (ethereumconfig) {
    set_has_ethereumconfig();
    config_.ethereumconfig_ = ethereumconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.ethereumConfig)
}

// optional .org.kframework.kevm.extvm.IeleConfig ieleConfig = 9;
bool CallContext::has_ieleconfig() const {
  return config_case() == kIeleConfig;
}
void CallContext::set_has_ieleconfig() {
  _oneof_case_[0] = kIeleConfig;
}
void CallContext::clear_ieleconfig() {
  if (has_ieleconfig()) {
    delete config_.ieleconfig_;
    clear_has_config();
  }
}
 const ::org::kframework::kevm::extvm::IeleConfig& CallContext::ieleconfig() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallContext.ieleConfig)
  return has_ieleconfig()
      ? *config_.ieleconfig_
      : ::org::kframework::kevm::extvm::IeleConfig::default_instance();
}
::org::kframework::kevm::extvm::IeleConfig* CallContext::mutable_ieleconfig() {
  if (!has_ieleconfig()) {
    clear_config();
    set_has_ieleconfig();
    config_.ieleconfig_ = new ::org::kframework::kevm::extvm::IeleConfig;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallContext.ieleConfig)
  return config_.ieleconfig_;
}
::org::kframework::kevm::extvm::IeleConfig* CallContext::release_ieleconfig() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallContext.ieleConfig)
  if (has_ieleconfig()) {
    clear_has_config();
    ::org::kframework::kevm::extvm::IeleConfig* temp = config_.ieleconfig_;
    config_.ieleconfig_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CallContext::set_allocated_ieleconfig(::org::kframework::kevm::extvm::IeleConfig* ieleconfig) {
  clear_config();
  if (ieleconfig) {
    set_has_ieleconfig();
    config_.ieleconfig_ = ieleconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallContext.ieleConfig)
}

bool CallContext::has_config() const {
  return config_case() != CONFIG_NOT_SET;
}
void CallContext::clear_has_config() {
  _oneof_case_[0] = CONFIG_NOT_SET;
}
CallContext::ConfigCase CallContext::config_case() const {
  return CallContext::ConfigCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockHeader::kBeneficiaryFieldNumber;
const int BlockHeader::kDifficultyFieldNumber;
const int BlockHeader::kNumberFieldNumber;
const int BlockHeader::kGasLimitFieldNumber;
const int BlockHeader::kUnixTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockHeader::BlockHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.BlockHeader)
}

void BlockHeader::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BlockHeader::BlockHeader(const BlockHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.BlockHeader)
}

void BlockHeader::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  beneficiary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  difficulty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaslimit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unixtimestamp_ = GOOGLE_LONGLONG(0);
}

BlockHeader::~BlockHeader() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.BlockHeader)
  SharedDtor();
}

void BlockHeader::SharedDtor() {
  beneficiary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  difficulty_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaslimit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BlockHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockHeader_descriptor_;
}

const BlockHeader& BlockHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

BlockHeader* BlockHeader::default_instance_ = NULL;

BlockHeader* BlockHeader::New(::google::protobuf::Arena* arena) const {
  BlockHeader* n = new BlockHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.BlockHeader)
  beneficiary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  difficulty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaslimit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unixtimestamp_ = GOOGLE_LONGLONG(0);
}

bool BlockHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.BlockHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes beneficiary = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_beneficiary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_difficulty;
        break;
      }

      // optional bytes difficulty = 2;
      case 2: {
        if (tag == 18) {
         parse_difficulty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_difficulty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_number;
        break;
      }

      // optional bytes number = 3;
      case 3: {
        if (tag == 26) {
         parse_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_number()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gasLimit;
        break;
      }

      // optional bytes gasLimit = 4;
      case 4: {
        if (tag == 34) {
         parse_gasLimit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gaslimit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_unixTimestamp;
        break;
      }

      // optional int64 unixTimestamp = 5;
      case 5: {
        if (tag == 40) {
         parse_unixTimestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &unixtimestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.BlockHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.BlockHeader)
  return false;
#undef DO_
}

void BlockHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.BlockHeader)
  // optional bytes beneficiary = 1;
  if (this->beneficiary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->beneficiary(), output);
  }

  // optional bytes difficulty = 2;
  if (this->difficulty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->difficulty(), output);
  }

  // optional bytes number = 3;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->number(), output);
  }

  // optional bytes gasLimit = 4;
  if (this->gaslimit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->gaslimit(), output);
  }

  // optional int64 unixTimestamp = 5;
  if (this->unixtimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->unixtimestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.BlockHeader)
}

::google::protobuf::uint8* BlockHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.BlockHeader)
  // optional bytes beneficiary = 1;
  if (this->beneficiary().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->beneficiary(), target);
  }

  // optional bytes difficulty = 2;
  if (this->difficulty().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->difficulty(), target);
  }

  // optional bytes number = 3;
  if (this->number().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->number(), target);
  }

  // optional bytes gasLimit = 4;
  if (this->gaslimit().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->gaslimit(), target);
  }

  // optional int64 unixTimestamp = 5;
  if (this->unixtimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->unixtimestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.BlockHeader)
  return target;
}

int BlockHeader::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.BlockHeader)
  int total_size = 0;

  // optional bytes beneficiary = 1;
  if (this->beneficiary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->beneficiary());
  }

  // optional bytes difficulty = 2;
  if (this->difficulty().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->difficulty());
  }

  // optional bytes number = 3;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->number());
  }

  // optional bytes gasLimit = 4;
  if (this->gaslimit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gaslimit());
  }

  // optional int64 unixTimestamp = 5;
  if (this->unixtimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->unixtimestamp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.BlockHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BlockHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.BlockHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.BlockHeader)
    MergeFrom(*source);
  }
}

void BlockHeader::MergeFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.BlockHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.beneficiary().size() > 0) {

    beneficiary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.beneficiary_);
  }
  if (from.difficulty().size() > 0) {

    difficulty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.difficulty_);
  }
  if (from.number().size() > 0) {

    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  if (from.gaslimit().size() > 0) {

    gaslimit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gaslimit_);
  }
  if (from.unixtimestamp() != 0) {
    set_unixtimestamp(from.unixtimestamp());
  }
}

void BlockHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeader::CopyFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeader::IsInitialized() const {

  return true;
}

void BlockHeader::Swap(BlockHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockHeader::InternalSwap(BlockHeader* other) {
  beneficiary_.Swap(&other->beneficiary_);
  difficulty_.Swap(&other->difficulty_);
  number_.Swap(&other->number_);
  gaslimit_.Swap(&other->gaslimit_);
  std::swap(unixtimestamp_, other->unixtimestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockHeader_descriptor_;
  metadata.reflection = BlockHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockHeader

// optional bytes beneficiary = 1;
void BlockHeader::clear_beneficiary() {
  beneficiary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BlockHeader::beneficiary() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.BlockHeader.beneficiary)
  return beneficiary_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_beneficiary(const ::std::string& value) {
  
  beneficiary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.BlockHeader.beneficiary)
}
 void BlockHeader::set_beneficiary(const char* value) {
  
  beneficiary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.BlockHeader.beneficiary)
}
 void BlockHeader::set_beneficiary(const void* value, size_t size) {
  
  beneficiary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.BlockHeader.beneficiary)
}
 ::std::string* BlockHeader::mutable_beneficiary() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.BlockHeader.beneficiary)
  return beneficiary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BlockHeader::release_beneficiary() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.BlockHeader.beneficiary)
  
  return beneficiary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_allocated_beneficiary(::std::string* beneficiary) {
  if (beneficiary != NULL) {
    
  } else {
    
  }
  beneficiary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), beneficiary);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.BlockHeader.beneficiary)
}

// optional bytes difficulty = 2;
void BlockHeader::clear_difficulty() {
  difficulty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BlockHeader::difficulty() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.BlockHeader.difficulty)
  return difficulty_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_difficulty(const ::std::string& value) {
  
  difficulty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.BlockHeader.difficulty)
}
 void BlockHeader::set_difficulty(const char* value) {
  
  difficulty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.BlockHeader.difficulty)
}
 void BlockHeader::set_difficulty(const void* value, size_t size) {
  
  difficulty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.BlockHeader.difficulty)
}
 ::std::string* BlockHeader::mutable_difficulty() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.BlockHeader.difficulty)
  return difficulty_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BlockHeader::release_difficulty() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.BlockHeader.difficulty)
  
  return difficulty_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_allocated_difficulty(::std::string* difficulty) {
  if (difficulty != NULL) {
    
  } else {
    
  }
  difficulty_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), difficulty);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.BlockHeader.difficulty)
}

// optional bytes number = 3;
void BlockHeader::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BlockHeader::number() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.BlockHeader.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_number(const ::std::string& value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.BlockHeader.number)
}
 void BlockHeader::set_number(const char* value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.BlockHeader.number)
}
 void BlockHeader::set_number(const void* value, size_t size) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.BlockHeader.number)
}
 ::std::string* BlockHeader::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.BlockHeader.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BlockHeader::release_number() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.BlockHeader.number)
  
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.BlockHeader.number)
}

// optional bytes gasLimit = 4;
void BlockHeader::clear_gaslimit() {
  gaslimit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BlockHeader::gaslimit() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.BlockHeader.gasLimit)
  return gaslimit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_gaslimit(const ::std::string& value) {
  
  gaslimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.BlockHeader.gasLimit)
}
 void BlockHeader::set_gaslimit(const char* value) {
  
  gaslimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.BlockHeader.gasLimit)
}
 void BlockHeader::set_gaslimit(const void* value, size_t size) {
  
  gaslimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.BlockHeader.gasLimit)
}
 ::std::string* BlockHeader::mutable_gaslimit() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.BlockHeader.gasLimit)
  return gaslimit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BlockHeader::release_gaslimit() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.BlockHeader.gasLimit)
  
  return gaslimit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlockHeader::set_allocated_gaslimit(::std::string* gaslimit) {
  if (gaslimit != NULL) {
    
  } else {
    
  }
  gaslimit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gaslimit);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.BlockHeader.gasLimit)
}

// optional int64 unixTimestamp = 5;
void BlockHeader::clear_unixtimestamp() {
  unixtimestamp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 BlockHeader::unixtimestamp() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.BlockHeader.unixTimestamp)
  return unixtimestamp_;
}
 void BlockHeader::set_unixtimestamp(::google::protobuf::int64 value) {
  
  unixtimestamp_ = value;
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.BlockHeader.unixTimestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EthereumConfig::kFrontierBlockNumberFieldNumber;
const int EthereumConfig::kHomesteadBlockNumberFieldNumber;
const int EthereumConfig::kEip150BlockNumberFieldNumber;
const int EthereumConfig::kEip160BlockNumberFieldNumber;
const int EthereumConfig::kEip161BlockNumberFieldNumber;
const int EthereumConfig::kMaxCodeSizeFieldNumber;
const int EthereumConfig::kAccountStartNonceFieldNumber;
const int EthereumConfig::kByzantiumBlockNumberFieldNumber;
const int EthereumConfig::kConstantinopleBlockNumberFieldNumber;
const int EthereumConfig::kPetersburgBlockNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EthereumConfig::EthereumConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.EthereumConfig)
}

void EthereumConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EthereumConfig::EthereumConfig(const EthereumConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.EthereumConfig)
}

void EthereumConfig::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  frontierblocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homesteadblocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip150blocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip160blocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip161blocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxcodesize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountstartnonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  byzantiumblocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  constantinopleblocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  petersburgblocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EthereumConfig::~EthereumConfig() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.EthereumConfig)
  SharedDtor();
}

void EthereumConfig::SharedDtor() {
  frontierblocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homesteadblocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip150blocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip160blocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip161blocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxcodesize_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountstartnonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  byzantiumblocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  constantinopleblocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  petersburgblocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EthereumConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EthereumConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EthereumConfig_descriptor_;
}

const EthereumConfig& EthereumConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

EthereumConfig* EthereumConfig::default_instance_ = NULL;

EthereumConfig* EthereumConfig::New(::google::protobuf::Arena* arena) const {
  EthereumConfig* n = new EthereumConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EthereumConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.EthereumConfig)
  frontierblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homesteadblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip150blocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip160blocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eip161blocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxcodesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountstartnonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  byzantiumblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  constantinopleblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  petersburgblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EthereumConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.EthereumConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes frontierBlockNumber = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frontierblocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_homesteadBlockNumber;
        break;
      }

      // optional bytes homesteadBlockNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_homesteadBlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_homesteadblocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_eip150BlockNumber;
        break;
      }

      // optional bytes eip150BlockNumber = 3;
      case 3: {
        if (tag == 26) {
         parse_eip150BlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_eip150blocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_eip160BlockNumber;
        break;
      }

      // optional bytes eip160BlockNumber = 4;
      case 4: {
        if (tag == 34) {
         parse_eip160BlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_eip160blocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_eip161BlockNumber;
        break;
      }

      // optional bytes eip161BlockNumber = 5;
      case 5: {
        if (tag == 42) {
         parse_eip161BlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_eip161blocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_maxCodeSize;
        break;
      }

      // optional bytes maxCodeSize = 6;
      case 6: {
        if (tag == 50) {
         parse_maxCodeSize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_maxcodesize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_accountStartNonce;
        break;
      }

      // optional bytes accountStartNonce = 7;
      case 7: {
        if (tag == 58) {
         parse_accountStartNonce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_accountstartnonce()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_byzantiumBlockNumber;
        break;
      }

      // optional bytes byzantiumBlockNumber = 8;
      case 8: {
        if (tag == 66) {
         parse_byzantiumBlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_byzantiumblocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_constantinopleBlockNumber;
        break;
      }

      // optional bytes constantinopleBlockNumber = 9;
      case 9: {
        if (tag == 74) {
         parse_constantinopleBlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_constantinopleblocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_petersburgBlockNumber;
        break;
      }

      // optional bytes petersburgBlockNumber = 10;
      case 10: {
        if (tag == 82) {
         parse_petersburgBlockNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_petersburgblocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.EthereumConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.EthereumConfig)
  return false;
#undef DO_
}

void EthereumConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.EthereumConfig)
  // optional bytes frontierBlockNumber = 1;
  if (this->frontierblocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->frontierblocknumber(), output);
  }

  // optional bytes homesteadBlockNumber = 2;
  if (this->homesteadblocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->homesteadblocknumber(), output);
  }

  // optional bytes eip150BlockNumber = 3;
  if (this->eip150blocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->eip150blocknumber(), output);
  }

  // optional bytes eip160BlockNumber = 4;
  if (this->eip160blocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->eip160blocknumber(), output);
  }

  // optional bytes eip161BlockNumber = 5;
  if (this->eip161blocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->eip161blocknumber(), output);
  }

  // optional bytes maxCodeSize = 6;
  if (this->maxcodesize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->maxcodesize(), output);
  }

  // optional bytes accountStartNonce = 7;
  if (this->accountstartnonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->accountstartnonce(), output);
  }

  // optional bytes byzantiumBlockNumber = 8;
  if (this->byzantiumblocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->byzantiumblocknumber(), output);
  }

  // optional bytes constantinopleBlockNumber = 9;
  if (this->constantinopleblocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->constantinopleblocknumber(), output);
  }

  // optional bytes petersburgBlockNumber = 10;
  if (this->petersburgblocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->petersburgblocknumber(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.EthereumConfig)
}

::google::protobuf::uint8* EthereumConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.EthereumConfig)
  // optional bytes frontierBlockNumber = 1;
  if (this->frontierblocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->frontierblocknumber(), target);
  }

  // optional bytes homesteadBlockNumber = 2;
  if (this->homesteadblocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->homesteadblocknumber(), target);
  }

  // optional bytes eip150BlockNumber = 3;
  if (this->eip150blocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->eip150blocknumber(), target);
  }

  // optional bytes eip160BlockNumber = 4;
  if (this->eip160blocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->eip160blocknumber(), target);
  }

  // optional bytes eip161BlockNumber = 5;
  if (this->eip161blocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->eip161blocknumber(), target);
  }

  // optional bytes maxCodeSize = 6;
  if (this->maxcodesize().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->maxcodesize(), target);
  }

  // optional bytes accountStartNonce = 7;
  if (this->accountstartnonce().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->accountstartnonce(), target);
  }

  // optional bytes byzantiumBlockNumber = 8;
  if (this->byzantiumblocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->byzantiumblocknumber(), target);
  }

  // optional bytes constantinopleBlockNumber = 9;
  if (this->constantinopleblocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->constantinopleblocknumber(), target);
  }

  // optional bytes petersburgBlockNumber = 10;
  if (this->petersburgblocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->petersburgblocknumber(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.EthereumConfig)
  return target;
}

int EthereumConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.EthereumConfig)
  int total_size = 0;

  // optional bytes frontierBlockNumber = 1;
  if (this->frontierblocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frontierblocknumber());
  }

  // optional bytes homesteadBlockNumber = 2;
  if (this->homesteadblocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->homesteadblocknumber());
  }

  // optional bytes eip150BlockNumber = 3;
  if (this->eip150blocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->eip150blocknumber());
  }

  // optional bytes eip160BlockNumber = 4;
  if (this->eip160blocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->eip160blocknumber());
  }

  // optional bytes eip161BlockNumber = 5;
  if (this->eip161blocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->eip161blocknumber());
  }

  // optional bytes maxCodeSize = 6;
  if (this->maxcodesize().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->maxcodesize());
  }

  // optional bytes accountStartNonce = 7;
  if (this->accountstartnonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->accountstartnonce());
  }

  // optional bytes byzantiumBlockNumber = 8;
  if (this->byzantiumblocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->byzantiumblocknumber());
  }

  // optional bytes constantinopleBlockNumber = 9;
  if (this->constantinopleblocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->constantinopleblocknumber());
  }

  // optional bytes petersburgBlockNumber = 10;
  if (this->petersburgblocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->petersburgblocknumber());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EthereumConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.EthereumConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EthereumConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EthereumConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.EthereumConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.EthereumConfig)
    MergeFrom(*source);
  }
}

void EthereumConfig::MergeFrom(const EthereumConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.EthereumConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.frontierblocknumber().size() > 0) {

    frontierblocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frontierblocknumber_);
  }
  if (from.homesteadblocknumber().size() > 0) {

    homesteadblocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homesteadblocknumber_);
  }
  if (from.eip150blocknumber().size() > 0) {

    eip150blocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eip150blocknumber_);
  }
  if (from.eip160blocknumber().size() > 0) {

    eip160blocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eip160blocknumber_);
  }
  if (from.eip161blocknumber().size() > 0) {

    eip161blocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eip161blocknumber_);
  }
  if (from.maxcodesize().size() > 0) {

    maxcodesize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maxcodesize_);
  }
  if (from.accountstartnonce().size() > 0) {

    accountstartnonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountstartnonce_);
  }
  if (from.byzantiumblocknumber().size() > 0) {

    byzantiumblocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.byzantiumblocknumber_);
  }
  if (from.constantinopleblocknumber().size() > 0) {

    constantinopleblocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constantinopleblocknumber_);
  }
  if (from.petersburgblocknumber().size() > 0) {

    petersburgblocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.petersburgblocknumber_);
  }
}

void EthereumConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.EthereumConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EthereumConfig::CopyFrom(const EthereumConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.EthereumConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EthereumConfig::IsInitialized() const {

  return true;
}

void EthereumConfig::Swap(EthereumConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EthereumConfig::InternalSwap(EthereumConfig* other) {
  frontierblocknumber_.Swap(&other->frontierblocknumber_);
  homesteadblocknumber_.Swap(&other->homesteadblocknumber_);
  eip150blocknumber_.Swap(&other->eip150blocknumber_);
  eip160blocknumber_.Swap(&other->eip160blocknumber_);
  eip161blocknumber_.Swap(&other->eip161blocknumber_);
  maxcodesize_.Swap(&other->maxcodesize_);
  accountstartnonce_.Swap(&other->accountstartnonce_);
  byzantiumblocknumber_.Swap(&other->byzantiumblocknumber_);
  constantinopleblocknumber_.Swap(&other->constantinopleblocknumber_);
  petersburgblocknumber_.Swap(&other->petersburgblocknumber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EthereumConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EthereumConfig_descriptor_;
  metadata.reflection = EthereumConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EthereumConfig

// optional bytes frontierBlockNumber = 1;
void EthereumConfig::clear_frontierblocknumber() {
  frontierblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::frontierblocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
  return frontierblocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_frontierblocknumber(const ::std::string& value) {
  
  frontierblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
}
 void EthereumConfig::set_frontierblocknumber(const char* value) {
  
  frontierblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
}
 void EthereumConfig::set_frontierblocknumber(const void* value, size_t size) {
  
  frontierblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
}
 ::std::string* EthereumConfig::mutable_frontierblocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
  return frontierblocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_frontierblocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
  
  return frontierblocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_frontierblocknumber(::std::string* frontierblocknumber) {
  if (frontierblocknumber != NULL) {
    
  } else {
    
  }
  frontierblocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frontierblocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.frontierBlockNumber)
}

// optional bytes homesteadBlockNumber = 2;
void EthereumConfig::clear_homesteadblocknumber() {
  homesteadblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::homesteadblocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
  return homesteadblocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_homesteadblocknumber(const ::std::string& value) {
  
  homesteadblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
}
 void EthereumConfig::set_homesteadblocknumber(const char* value) {
  
  homesteadblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
}
 void EthereumConfig::set_homesteadblocknumber(const void* value, size_t size) {
  
  homesteadblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
}
 ::std::string* EthereumConfig::mutable_homesteadblocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
  return homesteadblocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_homesteadblocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
  
  return homesteadblocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_homesteadblocknumber(::std::string* homesteadblocknumber) {
  if (homesteadblocknumber != NULL) {
    
  } else {
    
  }
  homesteadblocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homesteadblocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.homesteadBlockNumber)
}

// optional bytes eip150BlockNumber = 3;
void EthereumConfig::clear_eip150blocknumber() {
  eip150blocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::eip150blocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
  return eip150blocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_eip150blocknumber(const ::std::string& value) {
  
  eip150blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
}
 void EthereumConfig::set_eip150blocknumber(const char* value) {
  
  eip150blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
}
 void EthereumConfig::set_eip150blocknumber(const void* value, size_t size) {
  
  eip150blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
}
 ::std::string* EthereumConfig::mutable_eip150blocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
  return eip150blocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_eip150blocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
  
  return eip150blocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_eip150blocknumber(::std::string* eip150blocknumber) {
  if (eip150blocknumber != NULL) {
    
  } else {
    
  }
  eip150blocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eip150blocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.eip150BlockNumber)
}

// optional bytes eip160BlockNumber = 4;
void EthereumConfig::clear_eip160blocknumber() {
  eip160blocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::eip160blocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
  return eip160blocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_eip160blocknumber(const ::std::string& value) {
  
  eip160blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
}
 void EthereumConfig::set_eip160blocknumber(const char* value) {
  
  eip160blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
}
 void EthereumConfig::set_eip160blocknumber(const void* value, size_t size) {
  
  eip160blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
}
 ::std::string* EthereumConfig::mutable_eip160blocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
  return eip160blocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_eip160blocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
  
  return eip160blocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_eip160blocknumber(::std::string* eip160blocknumber) {
  if (eip160blocknumber != NULL) {
    
  } else {
    
  }
  eip160blocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eip160blocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.eip160BlockNumber)
}

// optional bytes eip161BlockNumber = 5;
void EthereumConfig::clear_eip161blocknumber() {
  eip161blocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::eip161blocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
  return eip161blocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_eip161blocknumber(const ::std::string& value) {
  
  eip161blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
}
 void EthereumConfig::set_eip161blocknumber(const char* value) {
  
  eip161blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
}
 void EthereumConfig::set_eip161blocknumber(const void* value, size_t size) {
  
  eip161blocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
}
 ::std::string* EthereumConfig::mutable_eip161blocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
  return eip161blocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_eip161blocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
  
  return eip161blocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_eip161blocknumber(::std::string* eip161blocknumber) {
  if (eip161blocknumber != NULL) {
    
  } else {
    
  }
  eip161blocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eip161blocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.eip161BlockNumber)
}

// optional bytes maxCodeSize = 6;
void EthereumConfig::clear_maxcodesize() {
  maxcodesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::maxcodesize() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
  return maxcodesize_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_maxcodesize(const ::std::string& value) {
  
  maxcodesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
}
 void EthereumConfig::set_maxcodesize(const char* value) {
  
  maxcodesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
}
 void EthereumConfig::set_maxcodesize(const void* value, size_t size) {
  
  maxcodesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
}
 ::std::string* EthereumConfig::mutable_maxcodesize() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
  return maxcodesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_maxcodesize() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
  
  return maxcodesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_maxcodesize(::std::string* maxcodesize) {
  if (maxcodesize != NULL) {
    
  } else {
    
  }
  maxcodesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maxcodesize);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.maxCodeSize)
}

// optional bytes accountStartNonce = 7;
void EthereumConfig::clear_accountstartnonce() {
  accountstartnonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::accountstartnonce() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
  return accountstartnonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_accountstartnonce(const ::std::string& value) {
  
  accountstartnonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
}
 void EthereumConfig::set_accountstartnonce(const char* value) {
  
  accountstartnonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
}
 void EthereumConfig::set_accountstartnonce(const void* value, size_t size) {
  
  accountstartnonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
}
 ::std::string* EthereumConfig::mutable_accountstartnonce() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
  return accountstartnonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_accountstartnonce() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
  
  return accountstartnonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_accountstartnonce(::std::string* accountstartnonce) {
  if (accountstartnonce != NULL) {
    
  } else {
    
  }
  accountstartnonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountstartnonce);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.accountStartNonce)
}

// optional bytes byzantiumBlockNumber = 8;
void EthereumConfig::clear_byzantiumblocknumber() {
  byzantiumblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::byzantiumblocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
  return byzantiumblocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_byzantiumblocknumber(const ::std::string& value) {
  
  byzantiumblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
}
 void EthereumConfig::set_byzantiumblocknumber(const char* value) {
  
  byzantiumblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
}
 void EthereumConfig::set_byzantiumblocknumber(const void* value, size_t size) {
  
  byzantiumblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
}
 ::std::string* EthereumConfig::mutable_byzantiumblocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
  return byzantiumblocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_byzantiumblocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
  
  return byzantiumblocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_byzantiumblocknumber(::std::string* byzantiumblocknumber) {
  if (byzantiumblocknumber != NULL) {
    
  } else {
    
  }
  byzantiumblocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), byzantiumblocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.byzantiumBlockNumber)
}

// optional bytes constantinopleBlockNumber = 9;
void EthereumConfig::clear_constantinopleblocknumber() {
  constantinopleblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::constantinopleblocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
  return constantinopleblocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_constantinopleblocknumber(const ::std::string& value) {
  
  constantinopleblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
}
 void EthereumConfig::set_constantinopleblocknumber(const char* value) {
  
  constantinopleblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
}
 void EthereumConfig::set_constantinopleblocknumber(const void* value, size_t size) {
  
  constantinopleblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
}
 ::std::string* EthereumConfig::mutable_constantinopleblocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
  return constantinopleblocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_constantinopleblocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
  
  return constantinopleblocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_constantinopleblocknumber(::std::string* constantinopleblocknumber) {
  if (constantinopleblocknumber != NULL) {
    
  } else {
    
  }
  constantinopleblocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), constantinopleblocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.constantinopleBlockNumber)
}

// optional bytes petersburgBlockNumber = 10;
void EthereumConfig::clear_petersburgblocknumber() {
  petersburgblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EthereumConfig::petersburgblocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
  return petersburgblocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_petersburgblocknumber(const ::std::string& value) {
  
  petersburgblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
}
 void EthereumConfig::set_petersburgblocknumber(const char* value) {
  
  petersburgblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
}
 void EthereumConfig::set_petersburgblocknumber(const void* value, size_t size) {
  
  petersburgblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
}
 ::std::string* EthereumConfig::mutable_petersburgblocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
  return petersburgblocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EthereumConfig::release_petersburgblocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
  
  return petersburgblocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EthereumConfig::set_allocated_petersburgblocknumber(::std::string* petersburgblocknumber) {
  if (petersburgblocknumber != NULL) {
    
  } else {
    
  }
  petersburgblocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), petersburgblocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.EthereumConfig.petersburgBlockNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IeleConfig::kDanseBlockNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IeleConfig::IeleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.IeleConfig)
}

void IeleConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IeleConfig::IeleConfig(const IeleConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.IeleConfig)
}

void IeleConfig::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  danseblocknumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IeleConfig::~IeleConfig() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.IeleConfig)
  SharedDtor();
}

void IeleConfig::SharedDtor() {
  danseblocknumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IeleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IeleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IeleConfig_descriptor_;
}

const IeleConfig& IeleConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

IeleConfig* IeleConfig::default_instance_ = NULL;

IeleConfig* IeleConfig::New(::google::protobuf::Arena* arena) const {
  IeleConfig* n = new IeleConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IeleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.IeleConfig)
  danseblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IeleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.IeleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes danseBlockNumber = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_danseblocknumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.IeleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.IeleConfig)
  return false;
#undef DO_
}

void IeleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.IeleConfig)
  // optional bytes danseBlockNumber = 1;
  if (this->danseblocknumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->danseblocknumber(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.IeleConfig)
}

::google::protobuf::uint8* IeleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.IeleConfig)
  // optional bytes danseBlockNumber = 1;
  if (this->danseblocknumber().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->danseblocknumber(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.IeleConfig)
  return target;
}

int IeleConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.IeleConfig)
  int total_size = 0;

  // optional bytes danseBlockNumber = 1;
  if (this->danseblocknumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->danseblocknumber());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IeleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.IeleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IeleConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IeleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.IeleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.IeleConfig)
    MergeFrom(*source);
  }
}

void IeleConfig::MergeFrom(const IeleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.IeleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.danseblocknumber().size() > 0) {

    danseblocknumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.danseblocknumber_);
  }
}

void IeleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.IeleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IeleConfig::CopyFrom(const IeleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.IeleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IeleConfig::IsInitialized() const {

  return true;
}

void IeleConfig::Swap(IeleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IeleConfig::InternalSwap(IeleConfig* other) {
  danseblocknumber_.Swap(&other->danseblocknumber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IeleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IeleConfig_descriptor_;
  metadata.reflection = IeleConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IeleConfig

// optional bytes danseBlockNumber = 1;
void IeleConfig::clear_danseblocknumber() {
  danseblocknumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IeleConfig::danseblocknumber() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
  return danseblocknumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IeleConfig::set_danseblocknumber(const ::std::string& value) {
  
  danseblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
}
 void IeleConfig::set_danseblocknumber(const char* value) {
  
  danseblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
}
 void IeleConfig::set_danseblocknumber(const void* value, size_t size) {
  
  danseblocknumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
}
 ::std::string* IeleConfig::mutable_danseblocknumber() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
  return danseblocknumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IeleConfig::release_danseblocknumber() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
  
  return danseblocknumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IeleConfig::set_allocated_danseblocknumber(::std::string* danseblocknumber) {
  if (danseblocknumber != NULL) {
    
  } else {
    
  }
  danseblocknumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), danseblocknumber);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.IeleConfig.danseBlockNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccount::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccount::GetAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.GetAccount)
}

void GetAccount::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetAccount::GetAccount(const GetAccount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.GetAccount)
}

void GetAccount::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAccount::~GetAccount() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.GetAccount)
  SharedDtor();
}

void GetAccount::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAccount_descriptor_;
}

const GetAccount& GetAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

GetAccount* GetAccount::default_instance_ = NULL;

GetAccount* GetAccount::New(::google::protobuf::Arena* arena) const {
  GetAccount* n = new GetAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.GetAccount)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.GetAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.GetAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.GetAccount)
  return false;
#undef DO_
}

void GetAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.GetAccount)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.GetAccount)
}

::google::protobuf::uint8* GetAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.GetAccount)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.GetAccount)
  return target;
}

int GetAccount::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.GetAccount)
  int total_size = 0;

  // optional bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.GetAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetAccount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.GetAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.GetAccount)
    MergeFrom(*source);
  }
}

void GetAccount::MergeFrom(const GetAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.GetAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void GetAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.GetAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccount::CopyFrom(const GetAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.GetAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccount::IsInitialized() const {

  return true;
}

void GetAccount::Swap(GetAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccount::InternalSwap(GetAccount* other) {
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAccount_descriptor_;
  metadata.reflection = GetAccount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAccount

// optional bytes address = 1;
void GetAccount::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetAccount::address() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.GetAccount.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAccount::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.GetAccount.address)
}
 void GetAccount::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.GetAccount.address)
}
 void GetAccount::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.GetAccount.address)
}
 ::std::string* GetAccount::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.GetAccount.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetAccount::release_address() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.GetAccount.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAccount::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.GetAccount.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account::kNonceFieldNumber;
const int Account::kBalanceFieldNumber;
const int Account::kCodeEmptyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account::Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.Account)
}

void Account::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Account::Account(const Account& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.Account)
}

void Account::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codeempty_ = false;
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.Account)
  SharedDtor();
}

void Account::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Account::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Account_descriptor_;
}

const Account& Account::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

Account* Account::default_instance_ = NULL;

Account* Account::New(::google::protobuf::Arena* arena) const {
  Account* n = new Account;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.Account)
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codeempty_ = false;
}

bool Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.Account)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes nonce = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nonce()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_balance;
        break;
      }

      // optional bytes balance = 2;
      case 2: {
        if (tag == 18) {
         parse_balance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_balance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_codeEmpty;
        break;
      }

      // optional bool codeEmpty = 3;
      case 3: {
        if (tag == 24) {
         parse_codeEmpty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &codeempty_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.Account)
  return false;
#undef DO_
}

void Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.Account)
  // optional bytes nonce = 1;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->nonce(), output);
  }

  // optional bytes balance = 2;
  if (this->balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->balance(), output);
  }

  // optional bool codeEmpty = 3;
  if (this->codeempty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->codeempty(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.Account)
}

::google::protobuf::uint8* Account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.Account)
  // optional bytes nonce = 1;
  if (this->nonce().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->nonce(), target);
  }

  // optional bytes balance = 2;
  if (this->balance().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->balance(), target);
  }

  // optional bool codeEmpty = 3;
  if (this->codeempty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->codeempty(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.Account)
  return target;
}

int Account::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.Account)
  int total_size = 0;

  // optional bytes nonce = 1;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nonce());
  }

  // optional bytes balance = 2;
  if (this->balance().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->balance());
  }

  // optional bool codeEmpty = 3;
  if (this->codeempty() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.Account)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Account* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.Account)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.balance().size() > 0) {

    balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_);
  }
  if (from.codeempty() != 0) {
    set_codeempty(from.codeempty());
  }
}

void Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {

  return true;
}

void Account::Swap(Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account::InternalSwap(Account* other) {
  nonce_.Swap(&other->nonce_);
  balance_.Swap(&other->balance_);
  std::swap(codeempty_, other->codeempty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Account_descriptor_;
  metadata.reflection = Account_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Account

// optional bytes nonce = 1;
void Account::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Account::nonce() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Account.nonce)
  return nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Account::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.Account.nonce)
}
 void Account::set_nonce(const char* value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.Account.nonce)
}
 void Account::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.Account.nonce)
}
 ::std::string* Account::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Account.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Account::release_nonce() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Account.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Account::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Account.nonce)
}

// optional bytes balance = 2;
void Account::clear_balance() {
  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Account::balance() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Account.balance)
  return balance_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Account::set_balance(const ::std::string& value) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.Account.balance)
}
 void Account::set_balance(const char* value) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.Account.balance)
}
 void Account::set_balance(const void* value, size_t size) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.Account.balance)
}
 ::std::string* Account::mutable_balance() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Account.balance)
  return balance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Account::release_balance() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Account.balance)
  
  return balance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Account::set_allocated_balance(::std::string* balance) {
  if (balance != NULL) {
    
  } else {
    
  }
  balance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Account.balance)
}

// optional bool codeEmpty = 3;
void Account::clear_codeempty() {
  codeempty_ = false;
}
 bool Account::codeempty() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Account.codeEmpty)
  return codeempty_;
}
 void Account::set_codeempty(bool value) {
  
  codeempty_ = value;
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.Account.codeEmpty)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStorageData::kAddressFieldNumber;
const int GetStorageData::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStorageData::GetStorageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.GetStorageData)
}

void GetStorageData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetStorageData::GetStorageData(const GetStorageData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.GetStorageData)
}

void GetStorageData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStorageData::~GetStorageData() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.GetStorageData)
  SharedDtor();
}

void GetStorageData::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetStorageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStorageData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStorageData_descriptor_;
}

const GetStorageData& GetStorageData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

GetStorageData* GetStorageData::default_instance_ = NULL;

GetStorageData* GetStorageData::New(::google::protobuf::Arena* arena) const {
  GetStorageData* n = new GetStorageData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetStorageData::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.GetStorageData)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetStorageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.GetStorageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_offset;
        break;
      }

      // optional bytes offset = 2;
      case 2: {
        if (tag == 18) {
         parse_offset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.GetStorageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.GetStorageData)
  return false;
#undef DO_
}

void GetStorageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.GetStorageData)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // optional bytes offset = 2;
  if (this->offset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.GetStorageData)
}

::google::protobuf::uint8* GetStorageData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.GetStorageData)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // optional bytes offset = 2;
  if (this->offset().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.GetStorageData)
  return target;
}

int GetStorageData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.GetStorageData)
  int total_size = 0;

  // optional bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // optional bytes offset = 2;
  if (this->offset().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->offset());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStorageData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.GetStorageData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetStorageData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStorageData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.GetStorageData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.GetStorageData)
    MergeFrom(*source);
  }
}

void GetStorageData::MergeFrom(const GetStorageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.GetStorageData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.offset().size() > 0) {

    offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offset_);
  }
}

void GetStorageData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.GetStorageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStorageData::CopyFrom(const GetStorageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.GetStorageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStorageData::IsInitialized() const {

  return true;
}

void GetStorageData::Swap(GetStorageData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStorageData::InternalSwap(GetStorageData* other) {
  address_.Swap(&other->address_);
  offset_.Swap(&other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetStorageData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStorageData_descriptor_;
  metadata.reflection = GetStorageData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetStorageData

// optional bytes address = 1;
void GetStorageData::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetStorageData::address() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.GetStorageData.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStorageData::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.GetStorageData.address)
}
 void GetStorageData::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.GetStorageData.address)
}
 void GetStorageData::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.GetStorageData.address)
}
 ::std::string* GetStorageData::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.GetStorageData.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetStorageData::release_address() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.GetStorageData.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStorageData::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.GetStorageData.address)
}

// optional bytes offset = 2;
void GetStorageData::clear_offset() {
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetStorageData::offset() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.GetStorageData.offset)
  return offset_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStorageData::set_offset(const ::std::string& value) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.GetStorageData.offset)
}
 void GetStorageData::set_offset(const char* value) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.GetStorageData.offset)
}
 void GetStorageData::set_offset(const void* value, size_t size) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.GetStorageData.offset)
}
 ::std::string* GetStorageData::mutable_offset() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.GetStorageData.offset)
  return offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetStorageData::release_offset() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.GetStorageData.offset)
  
  return offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStorageData::set_allocated_offset(::std::string* offset) {
  if (offset != NULL) {
    
  } else {
    
  }
  offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offset);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.GetStorageData.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageData::StorageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.StorageData)
}

void StorageData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StorageData::StorageData(const StorageData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.StorageData)
}

void StorageData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StorageData::~StorageData() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.StorageData)
  SharedDtor();
}

void StorageData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StorageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StorageData_descriptor_;
}

const StorageData& StorageData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

StorageData* StorageData::default_instance_ = NULL;

StorageData* StorageData::New(::google::protobuf::Arena* arena) const {
  StorageData* n = new StorageData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageData::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.StorageData)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StorageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.StorageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.StorageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.StorageData)
  return false;
#undef DO_
}

void StorageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.StorageData)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.StorageData)
}

::google::protobuf::uint8* StorageData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.StorageData)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.StorageData)
  return target;
}

int StorageData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.StorageData)
  int total_size = 0;

  // optional bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.StorageData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StorageData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.StorageData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.StorageData)
    MergeFrom(*source);
  }
}

void StorageData::MergeFrom(const StorageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.StorageData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void StorageData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.StorageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageData::CopyFrom(const StorageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.StorageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageData::IsInitialized() const {

  return true;
}

void StorageData::Swap(StorageData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageData::InternalSwap(StorageData* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StorageData_descriptor_;
  metadata.reflection = StorageData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageData

// optional bytes data = 1;
void StorageData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StorageData::data() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.StorageData.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.StorageData.data)
}
 void StorageData::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.StorageData.data)
}
 void StorageData::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.StorageData.data)
}
 ::std::string* StorageData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.StorageData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StorageData::release_data() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.StorageData.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.StorageData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCode::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCode::GetCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.GetCode)
}

void GetCode::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetCode::GetCode(const GetCode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.GetCode)
}

void GetCode::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetCode::~GetCode() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.GetCode)
  SharedDtor();
}

void GetCode::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCode_descriptor_;
}

const GetCode& GetCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

GetCode* GetCode::default_instance_ = NULL;

GetCode* GetCode::New(::google::protobuf::Arena* arena) const {
  GetCode* n = new GetCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCode::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.GetCode)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.GetCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.GetCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.GetCode)
  return false;
#undef DO_
}

void GetCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.GetCode)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.GetCode)
}

::google::protobuf::uint8* GetCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.GetCode)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.GetCode)
  return target;
}

int GetCode::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.GetCode)
  int total_size = 0;

  // optional bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.GetCode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetCode* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.GetCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.GetCode)
    MergeFrom(*source);
  }
}

void GetCode::MergeFrom(const GetCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.GetCode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void GetCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.GetCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCode::CopyFrom(const GetCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.GetCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCode::IsInitialized() const {

  return true;
}

void GetCode::Swap(GetCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCode::InternalSwap(GetCode* other) {
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCode_descriptor_;
  metadata.reflection = GetCode_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCode

// optional bytes address = 1;
void GetCode::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCode::address() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.GetCode.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCode::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.GetCode.address)
}
 void GetCode::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.GetCode.address)
}
 void GetCode::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.GetCode.address)
}
 ::std::string* GetCode::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.GetCode.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCode::release_address() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.GetCode.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCode::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.GetCode.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Code::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Code::Code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.Code)
}

void Code::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Code::Code(const Code& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.Code)
}

void Code::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Code::~Code() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.Code)
  SharedDtor();
}

void Code::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Code::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Code::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Code_descriptor_;
}

const Code& Code::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

Code* Code::default_instance_ = NULL;

Code* Code::New(::google::protobuf::Arena* arena) const {
  Code* n = new Code;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Code::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.Code)
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.Code)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.Code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.Code)
  return false;
#undef DO_
}

void Code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.Code)
  // optional bytes code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.Code)
}

::google::protobuf::uint8* Code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.Code)
  // optional bytes code = 1;
  if (this->code().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.Code)
  return target;
}

int Code::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.Code)
  int total_size = 0;

  // optional bytes code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.Code)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Code* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.Code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.Code)
    MergeFrom(*source);
  }
}

void Code::MergeFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.Code)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void Code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Code::CopyFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Code::IsInitialized() const {

  return true;
}

void Code::Swap(Code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Code::InternalSwap(Code* other) {
  code_.Swap(&other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Code::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Code_descriptor_;
  metadata.reflection = Code_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Code

// optional bytes code = 1;
void Code::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Code::code() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Code.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Code::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.Code.code)
}
 void Code::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.Code.code)
}
 void Code::set_code(const void* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.Code.code)
}
 ::std::string* Code::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Code.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Code::release_code() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Code.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Code::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Code.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockhash::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockhash::GetBlockhash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.GetBlockhash)
}

void GetBlockhash::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetBlockhash::GetBlockhash(const GetBlockhash& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.GetBlockhash)
}

void GetBlockhash::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  offset_ = 0;
}

GetBlockhash::~GetBlockhash() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.GetBlockhash)
  SharedDtor();
}

void GetBlockhash::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetBlockhash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockhash::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBlockhash_descriptor_;
}

const GetBlockhash& GetBlockhash::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

GetBlockhash* GetBlockhash::default_instance_ = NULL;

GetBlockhash* GetBlockhash::New(::google::protobuf::Arena* arena) const {
  GetBlockhash* n = new GetBlockhash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlockhash::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.GetBlockhash)
  offset_ = 0;
}

bool GetBlockhash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.GetBlockhash)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.GetBlockhash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.GetBlockhash)
  return false;
#undef DO_
}

void GetBlockhash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.GetBlockhash)
  // optional int32 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.GetBlockhash)
}

::google::protobuf::uint8* GetBlockhash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.GetBlockhash)
  // optional int32 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.GetBlockhash)
  return target;
}

int GetBlockhash::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.GetBlockhash)
  int total_size = 0;

  // optional int32 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockhash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.GetBlockhash)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBlockhash* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockhash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.GetBlockhash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.GetBlockhash)
    MergeFrom(*source);
  }
}

void GetBlockhash::MergeFrom(const GetBlockhash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.GetBlockhash)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void GetBlockhash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.GetBlockhash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockhash::CopyFrom(const GetBlockhash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.GetBlockhash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockhash::IsInitialized() const {

  return true;
}

void GetBlockhash::Swap(GetBlockhash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockhash::InternalSwap(GetBlockhash* other) {
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlockhash::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBlockhash_descriptor_;
  metadata.reflection = GetBlockhash_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBlockhash

// optional int32 offset = 1;
void GetBlockhash::clear_offset() {
  offset_ = 0;
}
 ::google::protobuf::int32 GetBlockhash::offset() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.GetBlockhash.offset)
  return offset_;
}
 void GetBlockhash::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.GetBlockhash.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Blockhash::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Blockhash::Blockhash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.Blockhash)
}

void Blockhash::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Blockhash::Blockhash(const Blockhash& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.Blockhash)
}

void Blockhash::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Blockhash::~Blockhash() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.Blockhash)
  SharedDtor();
}

void Blockhash::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Blockhash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Blockhash::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Blockhash_descriptor_;
}

const Blockhash& Blockhash::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

Blockhash* Blockhash::default_instance_ = NULL;

Blockhash* Blockhash::New(::google::protobuf::Arena* arena) const {
  Blockhash* n = new Blockhash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Blockhash::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.Blockhash)
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Blockhash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.Blockhash)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes hash = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.Blockhash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.Blockhash)
  return false;
#undef DO_
}

void Blockhash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.Blockhash)
  // optional bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.Blockhash)
}

::google::protobuf::uint8* Blockhash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.Blockhash)
  // optional bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.Blockhash)
  return target;
}

int Blockhash::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.Blockhash)
  int total_size = 0;

  // optional bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Blockhash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.Blockhash)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Blockhash* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Blockhash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.Blockhash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.Blockhash)
    MergeFrom(*source);
  }
}

void Blockhash::MergeFrom(const Blockhash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.Blockhash)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
}

void Blockhash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.Blockhash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Blockhash::CopyFrom(const Blockhash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.Blockhash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Blockhash::IsInitialized() const {

  return true;
}

void Blockhash::Swap(Blockhash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Blockhash::InternalSwap(Blockhash* other) {
  hash_.Swap(&other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Blockhash::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Blockhash_descriptor_;
  metadata.reflection = Blockhash_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Blockhash

// optional bytes hash = 1;
void Blockhash::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Blockhash::hash() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.Blockhash.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Blockhash::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.Blockhash.hash)
}
 void Blockhash::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.Blockhash.hash)
}
 void Blockhash::set_hash(const void* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.Blockhash.hash)
}
 ::std::string* Blockhash::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.Blockhash.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Blockhash::release_hash() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.Blockhash.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Blockhash::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.Blockhash.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResult::kReturnDataFieldNumber;
const int CallResult::kReturnCodeFieldNumber;
const int CallResult::kGasRemainingFieldNumber;
const int CallResult::kGasRefundFieldNumber;
const int CallResult::kErrorFieldNumber;
const int CallResult::kModifiedAccountsFieldNumber;
const int CallResult::kDeletedAccountsFieldNumber;
const int CallResult::kTouchedAccountsFieldNumber;
const int CallResult::kLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResult::CallResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.CallResult)
}

void CallResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CallResult::CallResult(const CallResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.CallResult)
}

void CallResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  returndata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasremaining_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasrefund_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = false;
}

CallResult::~CallResult() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.CallResult)
  SharedDtor();
}

void CallResult::SharedDtor() {
  returndata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasremaining_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasrefund_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CallResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallResult_descriptor_;
}

const CallResult& CallResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

CallResult* CallResult::default_instance_ = NULL;

CallResult* CallResult::New(::google::protobuf::Arena* arena) const {
  CallResult* n = new CallResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallResult::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.CallResult)
  returndata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasremaining_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasrefund_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = false;
  modifiedaccounts_.Clear();
  deletedaccounts_.Clear();
  touchedaccounts_.Clear();
  logs_.Clear();
}

bool CallResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.CallResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes returnData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_returndata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_returnCode;
        break;
      }

      // optional bytes returnCode = 2;
      case 2: {
        if (tag == 18) {
         parse_returnCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_returncode()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gasRemaining;
        break;
      }

      // optional bytes gasRemaining = 3;
      case 3: {
        if (tag == 26) {
         parse_gasRemaining:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gasremaining()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gasRefund;
        break;
      }

      // optional bytes gasRefund = 4;
      case 4: {
        if (tag == 34) {
         parse_gasRefund:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gasrefund()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_error;
        break;
      }

      // optional bool error = 5;
      case 5: {
        if (tag == 40) {
         parse_error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_modifiedAccounts;
        break;
      }

      // repeated .org.kframework.kevm.extvm.ModifiedAccount modifiedAccounts = 6;
      case 6: {
        if (tag == 50) {
         parse_modifiedAccounts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_modifiedAccounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_modifiedaccounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_modifiedAccounts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_deletedAccounts;
        break;
      }

      // repeated bytes deletedAccounts = 7;
      case 7: {
        if (tag == 58) {
         parse_deletedAccounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_deletedaccounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_deletedAccounts;
        if (input->ExpectTag(66)) goto parse_touchedAccounts;
        break;
      }

      // repeated bytes touchedAccounts = 8;
      case 8: {
        if (tag == 66) {
         parse_touchedAccounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_touchedaccounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_touchedAccounts;
        if (input->ExpectTag(74)) goto parse_logs;
        break;
      }

      // repeated .org.kframework.kevm.extvm.LogEntry logs = 9;
      case 9: {
        if (tag == 74) {
         parse_logs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_logs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_logs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_logs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.CallResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.CallResult)
  return false;
#undef DO_
}

void CallResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.CallResult)
  // optional bytes returnData = 1;
  if (this->returndata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->returndata(), output);
  }

  // optional bytes returnCode = 2;
  if (this->returncode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->returncode(), output);
  }

  // optional bytes gasRemaining = 3;
  if (this->gasremaining().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->gasremaining(), output);
  }

  // optional bytes gasRefund = 4;
  if (this->gasrefund().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->gasrefund(), output);
  }

  // optional bool error = 5;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->error(), output);
  }

  // repeated .org.kframework.kevm.extvm.ModifiedAccount modifiedAccounts = 6;
  for (unsigned int i = 0, n = this->modifiedaccounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->modifiedaccounts(i), output);
  }

  // repeated bytes deletedAccounts = 7;
  for (int i = 0; i < this->deletedaccounts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->deletedaccounts(i), output);
  }

  // repeated bytes touchedAccounts = 8;
  for (int i = 0; i < this->touchedaccounts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->touchedaccounts(i), output);
  }

  // repeated .org.kframework.kevm.extvm.LogEntry logs = 9;
  for (unsigned int i = 0, n = this->logs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->logs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.CallResult)
}

::google::protobuf::uint8* CallResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.CallResult)
  // optional bytes returnData = 1;
  if (this->returndata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->returndata(), target);
  }

  // optional bytes returnCode = 2;
  if (this->returncode().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->returncode(), target);
  }

  // optional bytes gasRemaining = 3;
  if (this->gasremaining().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->gasremaining(), target);
  }

  // optional bytes gasRefund = 4;
  if (this->gasrefund().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->gasrefund(), target);
  }

  // optional bool error = 5;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->error(), target);
  }

  // repeated .org.kframework.kevm.extvm.ModifiedAccount modifiedAccounts = 6;
  for (unsigned int i = 0, n = this->modifiedaccounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->modifiedaccounts(i), false, target);
  }

  // repeated bytes deletedAccounts = 7;
  for (int i = 0; i < this->deletedaccounts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(7, this->deletedaccounts(i), target);
  }

  // repeated bytes touchedAccounts = 8;
  for (int i = 0; i < this->touchedaccounts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->touchedaccounts(i), target);
  }

  // repeated .org.kframework.kevm.extvm.LogEntry logs = 9;
  for (unsigned int i = 0, n = this->logs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->logs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.CallResult)
  return target;
}

int CallResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.CallResult)
  int total_size = 0;

  // optional bytes returnData = 1;
  if (this->returndata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->returndata());
  }

  // optional bytes returnCode = 2;
  if (this->returncode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->returncode());
  }

  // optional bytes gasRemaining = 3;
  if (this->gasremaining().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gasremaining());
  }

  // optional bytes gasRefund = 4;
  if (this->gasrefund().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gasrefund());
  }

  // optional bool error = 5;
  if (this->error() != 0) {
    total_size += 1 + 1;
  }

  // repeated .org.kframework.kevm.extvm.ModifiedAccount modifiedAccounts = 6;
  total_size += 1 * this->modifiedaccounts_size();
  for (int i = 0; i < this->modifiedaccounts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->modifiedaccounts(i));
  }

  // repeated bytes deletedAccounts = 7;
  total_size += 1 * this->deletedaccounts_size();
  for (int i = 0; i < this->deletedaccounts_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->deletedaccounts(i));
  }

  // repeated bytes touchedAccounts = 8;
  total_size += 1 * this->touchedaccounts_size();
  for (int i = 0; i < this->touchedaccounts_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->touchedaccounts(i));
  }

  // repeated .org.kframework.kevm.extvm.LogEntry logs = 9;
  total_size += 1 * this->logs_size();
  for (int i = 0; i < this->logs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->logs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.CallResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CallResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CallResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.CallResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.CallResult)
    MergeFrom(*source);
  }
}

void CallResult::MergeFrom(const CallResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.CallResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  modifiedaccounts_.MergeFrom(from.modifiedaccounts_);
  deletedaccounts_.MergeFrom(from.deletedaccounts_);
  touchedaccounts_.MergeFrom(from.touchedaccounts_);
  logs_.MergeFrom(from.logs_);
  if (from.returndata().size() > 0) {

    returndata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.returndata_);
  }
  if (from.returncode().size() > 0) {

    returncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.returncode_);
  }
  if (from.gasremaining().size() > 0) {

    gasremaining_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gasremaining_);
  }
  if (from.gasrefund().size() > 0) {

    gasrefund_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gasrefund_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void CallResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.CallResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResult::CopyFrom(const CallResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.CallResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResult::IsInitialized() const {

  return true;
}

void CallResult::Swap(CallResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResult::InternalSwap(CallResult* other) {
  returndata_.Swap(&other->returndata_);
  returncode_.Swap(&other->returncode_);
  gasremaining_.Swap(&other->gasremaining_);
  gasrefund_.Swap(&other->gasrefund_);
  std::swap(error_, other->error_);
  modifiedaccounts_.UnsafeArenaSwap(&other->modifiedaccounts_);
  deletedaccounts_.UnsafeArenaSwap(&other->deletedaccounts_);
  touchedaccounts_.UnsafeArenaSwap(&other->touchedaccounts_);
  logs_.UnsafeArenaSwap(&other->logs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallResult_descriptor_;
  metadata.reflection = CallResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallResult

// optional bytes returnData = 1;
void CallResult::clear_returndata() {
  returndata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallResult::returndata() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.returnData)
  return returndata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_returndata(const ::std::string& value) {
  
  returndata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.returnData)
}
 void CallResult::set_returndata(const char* value) {
  
  returndata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallResult.returnData)
}
 void CallResult::set_returndata(const void* value, size_t size) {
  
  returndata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallResult.returnData)
}
 ::std::string* CallResult::mutable_returndata() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.returnData)
  return returndata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallResult::release_returndata() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallResult.returnData)
  
  return returndata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_allocated_returndata(::std::string* returndata) {
  if (returndata != NULL) {
    
  } else {
    
  }
  returndata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), returndata);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallResult.returnData)
}

// optional bytes returnCode = 2;
void CallResult::clear_returncode() {
  returncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallResult::returncode() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.returnCode)
  return returncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_returncode(const ::std::string& value) {
  
  returncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.returnCode)
}
 void CallResult::set_returncode(const char* value) {
  
  returncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallResult.returnCode)
}
 void CallResult::set_returncode(const void* value, size_t size) {
  
  returncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallResult.returnCode)
}
 ::std::string* CallResult::mutable_returncode() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.returnCode)
  return returncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallResult::release_returncode() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallResult.returnCode)
  
  return returncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_allocated_returncode(::std::string* returncode) {
  if (returncode != NULL) {
    
  } else {
    
  }
  returncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), returncode);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallResult.returnCode)
}

// optional bytes gasRemaining = 3;
void CallResult::clear_gasremaining() {
  gasremaining_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallResult::gasremaining() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.gasRemaining)
  return gasremaining_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_gasremaining(const ::std::string& value) {
  
  gasremaining_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.gasRemaining)
}
 void CallResult::set_gasremaining(const char* value) {
  
  gasremaining_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallResult.gasRemaining)
}
 void CallResult::set_gasremaining(const void* value, size_t size) {
  
  gasremaining_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallResult.gasRemaining)
}
 ::std::string* CallResult::mutable_gasremaining() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.gasRemaining)
  return gasremaining_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallResult::release_gasremaining() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallResult.gasRemaining)
  
  return gasremaining_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_allocated_gasremaining(::std::string* gasremaining) {
  if (gasremaining != NULL) {
    
  } else {
    
  }
  gasremaining_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gasremaining);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallResult.gasRemaining)
}

// optional bytes gasRefund = 4;
void CallResult::clear_gasrefund() {
  gasrefund_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CallResult::gasrefund() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.gasRefund)
  return gasrefund_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_gasrefund(const ::std::string& value) {
  
  gasrefund_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.gasRefund)
}
 void CallResult::set_gasrefund(const char* value) {
  
  gasrefund_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallResult.gasRefund)
}
 void CallResult::set_gasrefund(const void* value, size_t size) {
  
  gasrefund_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallResult.gasRefund)
}
 ::std::string* CallResult::mutable_gasrefund() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.gasRefund)
  return gasrefund_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallResult::release_gasrefund() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.CallResult.gasRefund)
  
  return gasrefund_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallResult::set_allocated_gasrefund(::std::string* gasrefund) {
  if (gasrefund != NULL) {
    
  } else {
    
  }
  gasrefund_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gasrefund);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.CallResult.gasRefund)
}

// optional bool error = 5;
void CallResult::clear_error() {
  error_ = false;
}
 bool CallResult::error() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.error)
  return error_;
}
 void CallResult::set_error(bool value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.error)
}

// repeated .org.kframework.kevm.extvm.ModifiedAccount modifiedAccounts = 6;
int CallResult::modifiedaccounts_size() const {
  return modifiedaccounts_.size();
}
void CallResult::clear_modifiedaccounts() {
  modifiedaccounts_.Clear();
}
const ::org::kframework::kevm::extvm::ModifiedAccount& CallResult::modifiedaccounts(int index) const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.modifiedAccounts)
  return modifiedaccounts_.Get(index);
}
::org::kframework::kevm::extvm::ModifiedAccount* CallResult::mutable_modifiedaccounts(int index) {
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.modifiedAccounts)
  return modifiedaccounts_.Mutable(index);
}
::org::kframework::kevm::extvm::ModifiedAccount* CallResult::add_modifiedaccounts() {
  // @@protoc_insertion_point(field_add:org.kframework.kevm.extvm.CallResult.modifiedAccounts)
  return modifiedaccounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::org::kframework::kevm::extvm::ModifiedAccount >*
CallResult::mutable_modifiedaccounts() {
  // @@protoc_insertion_point(field_mutable_list:org.kframework.kevm.extvm.CallResult.modifiedAccounts)
  return &modifiedaccounts_;
}
const ::google::protobuf::RepeatedPtrField< ::org::kframework::kevm::extvm::ModifiedAccount >&
CallResult::modifiedaccounts() const {
  // @@protoc_insertion_point(field_list:org.kframework.kevm.extvm.CallResult.modifiedAccounts)
  return modifiedaccounts_;
}

// repeated bytes deletedAccounts = 7;
int CallResult::deletedaccounts_size() const {
  return deletedaccounts_.size();
}
void CallResult::clear_deletedaccounts() {
  deletedaccounts_.Clear();
}
 const ::std::string& CallResult::deletedaccounts(int index) const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.deletedAccounts)
  return deletedaccounts_.Get(index);
}
 ::std::string* CallResult::mutable_deletedaccounts(int index) {
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.deletedAccounts)
  return deletedaccounts_.Mutable(index);
}
 void CallResult::set_deletedaccounts(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.deletedAccounts)
  deletedaccounts_.Mutable(index)->assign(value);
}
 void CallResult::set_deletedaccounts(int index, const char* value) {
  deletedaccounts_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallResult.deletedAccounts)
}
 void CallResult::set_deletedaccounts(int index, const void* value, size_t size) {
  deletedaccounts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallResult.deletedAccounts)
}
 ::std::string* CallResult::add_deletedaccounts() {
  // @@protoc_insertion_point(field_add_mutable:org.kframework.kevm.extvm.CallResult.deletedAccounts)
  return deletedaccounts_.Add();
}
 void CallResult::add_deletedaccounts(const ::std::string& value) {
  deletedaccounts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.kframework.kevm.extvm.CallResult.deletedAccounts)
}
 void CallResult::add_deletedaccounts(const char* value) {
  deletedaccounts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.kframework.kevm.extvm.CallResult.deletedAccounts)
}
 void CallResult::add_deletedaccounts(const void* value, size_t size) {
  deletedaccounts_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.kframework.kevm.extvm.CallResult.deletedAccounts)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CallResult::deletedaccounts() const {
  // @@protoc_insertion_point(field_list:org.kframework.kevm.extvm.CallResult.deletedAccounts)
  return deletedaccounts_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CallResult::mutable_deletedaccounts() {
  // @@protoc_insertion_point(field_mutable_list:org.kframework.kevm.extvm.CallResult.deletedAccounts)
  return &deletedaccounts_;
}

// repeated bytes touchedAccounts = 8;
int CallResult::touchedaccounts_size() const {
  return touchedaccounts_.size();
}
void CallResult::clear_touchedaccounts() {
  touchedaccounts_.Clear();
}
 const ::std::string& CallResult::touchedaccounts(int index) const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.touchedAccounts)
  return touchedaccounts_.Get(index);
}
 ::std::string* CallResult::mutable_touchedaccounts(int index) {
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.touchedAccounts)
  return touchedaccounts_.Mutable(index);
}
 void CallResult::set_touchedaccounts(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.CallResult.touchedAccounts)
  touchedaccounts_.Mutable(index)->assign(value);
}
 void CallResult::set_touchedaccounts(int index, const char* value) {
  touchedaccounts_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.CallResult.touchedAccounts)
}
 void CallResult::set_touchedaccounts(int index, const void* value, size_t size) {
  touchedaccounts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.CallResult.touchedAccounts)
}
 ::std::string* CallResult::add_touchedaccounts() {
  // @@protoc_insertion_point(field_add_mutable:org.kframework.kevm.extvm.CallResult.touchedAccounts)
  return touchedaccounts_.Add();
}
 void CallResult::add_touchedaccounts(const ::std::string& value) {
  touchedaccounts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.kframework.kevm.extvm.CallResult.touchedAccounts)
}
 void CallResult::add_touchedaccounts(const char* value) {
  touchedaccounts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.kframework.kevm.extvm.CallResult.touchedAccounts)
}
 void CallResult::add_touchedaccounts(const void* value, size_t size) {
  touchedaccounts_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.kframework.kevm.extvm.CallResult.touchedAccounts)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CallResult::touchedaccounts() const {
  // @@protoc_insertion_point(field_list:org.kframework.kevm.extvm.CallResult.touchedAccounts)
  return touchedaccounts_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CallResult::mutable_touchedaccounts() {
  // @@protoc_insertion_point(field_mutable_list:org.kframework.kevm.extvm.CallResult.touchedAccounts)
  return &touchedaccounts_;
}

// repeated .org.kframework.kevm.extvm.LogEntry logs = 9;
int CallResult::logs_size() const {
  return logs_.size();
}
void CallResult::clear_logs() {
  logs_.Clear();
}
const ::org::kframework::kevm::extvm::LogEntry& CallResult::logs(int index) const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.CallResult.logs)
  return logs_.Get(index);
}
::org::kframework::kevm::extvm::LogEntry* CallResult::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.CallResult.logs)
  return logs_.Mutable(index);
}
::org::kframework::kevm::extvm::LogEntry* CallResult::add_logs() {
  // @@protoc_insertion_point(field_add:org.kframework.kevm.extvm.CallResult.logs)
  return logs_.Add();
}
::google::protobuf::RepeatedPtrField< ::org::kframework::kevm::extvm::LogEntry >*
CallResult::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:org.kframework.kevm.extvm.CallResult.logs)
  return &logs_;
}
const ::google::protobuf::RepeatedPtrField< ::org::kframework::kevm::extvm::LogEntry >&
CallResult::logs() const {
  // @@protoc_insertion_point(field_list:org.kframework.kevm.extvm.CallResult.logs)
  return logs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifiedAccount::kAddressFieldNumber;
const int ModifiedAccount::kNonceFieldNumber;
const int ModifiedAccount::kBalanceFieldNumber;
const int ModifiedAccount::kStorageUpdatesFieldNumber;
const int ModifiedAccount::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifiedAccount::ModifiedAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.ModifiedAccount)
}

void ModifiedAccount::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ModifiedAccount::ModifiedAccount(const ModifiedAccount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.ModifiedAccount)
}

void ModifiedAccount::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ModifiedAccount::~ModifiedAccount() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.ModifiedAccount)
  SharedDtor();
}

void ModifiedAccount::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ModifiedAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifiedAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifiedAccount_descriptor_;
}

const ModifiedAccount& ModifiedAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

ModifiedAccount* ModifiedAccount::default_instance_ = NULL;

ModifiedAccount* ModifiedAccount::New(::google::protobuf::Arena* arena) const {
  ModifiedAccount* n = new ModifiedAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifiedAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.ModifiedAccount)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storageupdates_.Clear();
}

bool ModifiedAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.ModifiedAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nonce;
        break;
      }

      // optional bytes nonce = 2;
      case 2: {
        if (tag == 18) {
         parse_nonce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nonce()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_balance;
        break;
      }

      // optional bytes balance = 3;
      case 3: {
        if (tag == 26) {
         parse_balance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_balance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_storageUpdates;
        break;
      }

      // repeated .org.kframework.kevm.extvm.StorageUpdate storageUpdates = 4;
      case 4: {
        if (tag == 34) {
         parse_storageUpdates:
          DO_(input->IncrementRecursionDepth());
         parse_loop_storageUpdates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_storageupdates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_storageUpdates;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_code;
        break;
      }

      // optional bytes code = 5;
      case 5: {
        if (tag == 42) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.ModifiedAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.ModifiedAccount)
  return false;
#undef DO_
}

void ModifiedAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.ModifiedAccount)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // optional bytes nonce = 2;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nonce(), output);
  }

  // optional bytes balance = 3;
  if (this->balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->balance(), output);
  }

  // repeated .org.kframework.kevm.extvm.StorageUpdate storageUpdates = 4;
  for (unsigned int i = 0, n = this->storageupdates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->storageupdates(i), output);
  }

  // optional bytes code = 5;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.ModifiedAccount)
}

::google::protobuf::uint8* ModifiedAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.ModifiedAccount)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // optional bytes nonce = 2;
  if (this->nonce().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nonce(), target);
  }

  // optional bytes balance = 3;
  if (this->balance().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->balance(), target);
  }

  // repeated .org.kframework.kevm.extvm.StorageUpdate storageUpdates = 4;
  for (unsigned int i = 0, n = this->storageupdates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->storageupdates(i), false, target);
  }

  // optional bytes code = 5;
  if (this->code().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.ModifiedAccount)
  return target;
}

int ModifiedAccount::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.ModifiedAccount)
  int total_size = 0;

  // optional bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // optional bytes nonce = 2;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nonce());
  }

  // optional bytes balance = 3;
  if (this->balance().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->balance());
  }

  // optional bytes code = 5;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  // repeated .org.kframework.kevm.extvm.StorageUpdate storageUpdates = 4;
  total_size += 1 * this->storageupdates_size();
  for (int i = 0; i < this->storageupdates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->storageupdates(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifiedAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.ModifiedAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ModifiedAccount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifiedAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.ModifiedAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.ModifiedAccount)
    MergeFrom(*source);
  }
}

void ModifiedAccount::MergeFrom(const ModifiedAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.ModifiedAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  storageupdates_.MergeFrom(from.storageupdates_);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.balance().size() > 0) {

    balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void ModifiedAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.ModifiedAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifiedAccount::CopyFrom(const ModifiedAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.ModifiedAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifiedAccount::IsInitialized() const {

  return true;
}

void ModifiedAccount::Swap(ModifiedAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifiedAccount::InternalSwap(ModifiedAccount* other) {
  address_.Swap(&other->address_);
  nonce_.Swap(&other->nonce_);
  balance_.Swap(&other->balance_);
  storageupdates_.UnsafeArenaSwap(&other->storageupdates_);
  code_.Swap(&other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifiedAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifiedAccount_descriptor_;
  metadata.reflection = ModifiedAccount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifiedAccount

// optional bytes address = 1;
void ModifiedAccount::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModifiedAccount::address() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.ModifiedAccount.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.ModifiedAccount.address)
}
 void ModifiedAccount::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.ModifiedAccount.address)
}
 void ModifiedAccount::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.ModifiedAccount.address)
}
 ::std::string* ModifiedAccount::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.ModifiedAccount.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModifiedAccount::release_address() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.ModifiedAccount.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.ModifiedAccount.address)
}

// optional bytes nonce = 2;
void ModifiedAccount::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModifiedAccount::nonce() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.ModifiedAccount.nonce)
  return nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.ModifiedAccount.nonce)
}
 void ModifiedAccount::set_nonce(const char* value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.ModifiedAccount.nonce)
}
 void ModifiedAccount::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.ModifiedAccount.nonce)
}
 ::std::string* ModifiedAccount::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.ModifiedAccount.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModifiedAccount::release_nonce() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.ModifiedAccount.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.ModifiedAccount.nonce)
}

// optional bytes balance = 3;
void ModifiedAccount::clear_balance() {
  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModifiedAccount::balance() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.ModifiedAccount.balance)
  return balance_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_balance(const ::std::string& value) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.ModifiedAccount.balance)
}
 void ModifiedAccount::set_balance(const char* value) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.ModifiedAccount.balance)
}
 void ModifiedAccount::set_balance(const void* value, size_t size) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.ModifiedAccount.balance)
}
 ::std::string* ModifiedAccount::mutable_balance() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.ModifiedAccount.balance)
  return balance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModifiedAccount::release_balance() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.ModifiedAccount.balance)
  
  return balance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_allocated_balance(::std::string* balance) {
  if (balance != NULL) {
    
  } else {
    
  }
  balance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.ModifiedAccount.balance)
}

// repeated .org.kframework.kevm.extvm.StorageUpdate storageUpdates = 4;
int ModifiedAccount::storageupdates_size() const {
  return storageupdates_.size();
}
void ModifiedAccount::clear_storageupdates() {
  storageupdates_.Clear();
}
const ::org::kframework::kevm::extvm::StorageUpdate& ModifiedAccount::storageupdates(int index) const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.ModifiedAccount.storageUpdates)
  return storageupdates_.Get(index);
}
::org::kframework::kevm::extvm::StorageUpdate* ModifiedAccount::mutable_storageupdates(int index) {
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.ModifiedAccount.storageUpdates)
  return storageupdates_.Mutable(index);
}
::org::kframework::kevm::extvm::StorageUpdate* ModifiedAccount::add_storageupdates() {
  // @@protoc_insertion_point(field_add:org.kframework.kevm.extvm.ModifiedAccount.storageUpdates)
  return storageupdates_.Add();
}
::google::protobuf::RepeatedPtrField< ::org::kframework::kevm::extvm::StorageUpdate >*
ModifiedAccount::mutable_storageupdates() {
  // @@protoc_insertion_point(field_mutable_list:org.kframework.kevm.extvm.ModifiedAccount.storageUpdates)
  return &storageupdates_;
}
const ::google::protobuf::RepeatedPtrField< ::org::kframework::kevm::extvm::StorageUpdate >&
ModifiedAccount::storageupdates() const {
  // @@protoc_insertion_point(field_list:org.kframework.kevm.extvm.ModifiedAccount.storageUpdates)
  return storageupdates_;
}

// optional bytes code = 5;
void ModifiedAccount::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModifiedAccount::code() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.ModifiedAccount.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.ModifiedAccount.code)
}
 void ModifiedAccount::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.ModifiedAccount.code)
}
 void ModifiedAccount::set_code(const void* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.ModifiedAccount.code)
}
 ::std::string* ModifiedAccount::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.ModifiedAccount.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModifiedAccount::release_code() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.ModifiedAccount.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModifiedAccount::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.ModifiedAccount.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageUpdate::kOffsetFieldNumber;
const int StorageUpdate::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageUpdate::StorageUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.StorageUpdate)
}

void StorageUpdate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StorageUpdate::StorageUpdate(const StorageUpdate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.StorageUpdate)
}

void StorageUpdate::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StorageUpdate::~StorageUpdate() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.StorageUpdate)
  SharedDtor();
}

void StorageUpdate::SharedDtor() {
  offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StorageUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StorageUpdate_descriptor_;
}

const StorageUpdate& StorageUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

StorageUpdate* StorageUpdate::default_instance_ = NULL;

StorageUpdate* StorageUpdate::New(::google::protobuf::Arena* arena) const {
  StorageUpdate* n = new StorageUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.StorageUpdate)
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StorageUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.StorageUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes offset = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.StorageUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.StorageUpdate)
  return false;
#undef DO_
}

void StorageUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.StorageUpdate)
  // optional bytes offset = 1;
  if (this->offset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->offset(), output);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.StorageUpdate)
}

::google::protobuf::uint8* StorageUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.StorageUpdate)
  // optional bytes offset = 1;
  if (this->offset().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->offset(), target);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.StorageUpdate)
  return target;
}

int StorageUpdate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.StorageUpdate)
  int total_size = 0;

  // optional bytes offset = 1;
  if (this->offset().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->offset());
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.StorageUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StorageUpdate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.StorageUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.StorageUpdate)
    MergeFrom(*source);
  }
}

void StorageUpdate::MergeFrom(const StorageUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.StorageUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.offset().size() > 0) {

    offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offset_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void StorageUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.StorageUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageUpdate::CopyFrom(const StorageUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.StorageUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageUpdate::IsInitialized() const {

  return true;
}

void StorageUpdate::Swap(StorageUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageUpdate::InternalSwap(StorageUpdate* other) {
  offset_.Swap(&other->offset_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StorageUpdate_descriptor_;
  metadata.reflection = StorageUpdate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageUpdate

// optional bytes offset = 1;
void StorageUpdate::clear_offset() {
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StorageUpdate::offset() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.StorageUpdate.offset)
  return offset_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageUpdate::set_offset(const ::std::string& value) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.StorageUpdate.offset)
}
 void StorageUpdate::set_offset(const char* value) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.StorageUpdate.offset)
}
 void StorageUpdate::set_offset(const void* value, size_t size) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.StorageUpdate.offset)
}
 ::std::string* StorageUpdate::mutable_offset() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.StorageUpdate.offset)
  return offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StorageUpdate::release_offset() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.StorageUpdate.offset)
  
  return offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageUpdate::set_allocated_offset(::std::string* offset) {
  if (offset != NULL) {
    
  } else {
    
  }
  offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offset);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.StorageUpdate.offset)
}

// optional bytes data = 2;
void StorageUpdate::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StorageUpdate::data() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.StorageUpdate.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageUpdate::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.StorageUpdate.data)
}
 void StorageUpdate::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.StorageUpdate.data)
}
 void StorageUpdate::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.StorageUpdate.data)
}
 ::std::string* StorageUpdate::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.StorageUpdate.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StorageUpdate::release_data() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.StorageUpdate.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageUpdate::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.StorageUpdate.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry::kAddressFieldNumber;
const int LogEntry::kTopicsFieldNumber;
const int LogEntry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry::LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.LogEntry)
}

void LogEntry::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LogEntry::LogEntry(const LogEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.LogEntry)
}

void LogEntry::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.LogEntry)
  SharedDtor();
}

void LogEntry::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogEntry_descriptor_;
}

const LogEntry& LogEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

LogEntry* LogEntry::default_instance_ = NULL;

LogEntry* LogEntry::New(::google::protobuf::Arena* arena) const {
  LogEntry* n = new LogEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.LogEntry)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topics_.Clear();
}

bool LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.LogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_topics;
        break;
      }

      // repeated bytes topics = 2;
      case 2: {
        if (tag == 18) {
         parse_topics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_topics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_topics;
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional bytes data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.LogEntry)
  return false;
#undef DO_
}

void LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.LogEntry)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // repeated bytes topics = 2;
  for (int i = 0; i < this->topics_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->topics(i), output);
  }

  // optional bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.LogEntry)
}

::google::protobuf::uint8* LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.LogEntry)
  // optional bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // repeated bytes topics = 2;
  for (int i = 0; i < this->topics_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->topics(i), target);
  }

  // optional bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.LogEntry)
  return target;
}

int LogEntry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.LogEntry)
  int total_size = 0;

  // optional bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // optional bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // repeated bytes topics = 2;
  total_size += 1 * this->topics_size();
  for (int i = 0; i < this->topics_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->topics(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.LogEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogEntry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.LogEntry)
    MergeFrom(*source);
  }
}

void LogEntry::MergeFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.LogEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  topics_.MergeFrom(from.topics_);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {

  return true;
}

void LogEntry::Swap(LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry::InternalSwap(LogEntry* other) {
  address_.Swap(&other->address_);
  topics_.UnsafeArenaSwap(&other->topics_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogEntry_descriptor_;
  metadata.reflection = LogEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogEntry

// optional bytes address = 1;
void LogEntry::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogEntry::address() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.LogEntry.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogEntry::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.LogEntry.address)
}
 void LogEntry::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.LogEntry.address)
}
 void LogEntry::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.LogEntry.address)
}
 ::std::string* LogEntry::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.LogEntry.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogEntry::release_address() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.LogEntry.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogEntry::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.LogEntry.address)
}

// repeated bytes topics = 2;
int LogEntry::topics_size() const {
  return topics_.size();
}
void LogEntry::clear_topics() {
  topics_.Clear();
}
 const ::std::string& LogEntry::topics(int index) const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.LogEntry.topics)
  return topics_.Get(index);
}
 ::std::string* LogEntry::mutable_topics(int index) {
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.LogEntry.topics)
  return topics_.Mutable(index);
}
 void LogEntry::set_topics(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.LogEntry.topics)
  topics_.Mutable(index)->assign(value);
}
 void LogEntry::set_topics(int index, const char* value) {
  topics_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.LogEntry.topics)
}
 void LogEntry::set_topics(int index, const void* value, size_t size) {
  topics_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.LogEntry.topics)
}
 ::std::string* LogEntry::add_topics() {
  // @@protoc_insertion_point(field_add_mutable:org.kframework.kevm.extvm.LogEntry.topics)
  return topics_.Add();
}
 void LogEntry::add_topics(const ::std::string& value) {
  topics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.kframework.kevm.extvm.LogEntry.topics)
}
 void LogEntry::add_topics(const char* value) {
  topics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.kframework.kevm.extvm.LogEntry.topics)
}
 void LogEntry::add_topics(const void* value, size_t size) {
  topics_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.kframework.kevm.extvm.LogEntry.topics)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
LogEntry::topics() const {
  // @@protoc_insertion_point(field_list:org.kframework.kevm.extvm.LogEntry.topics)
  return topics_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
LogEntry::mutable_topics() {
  // @@protoc_insertion_point(field_mutable_list:org.kframework.kevm.extvm.LogEntry.topics)
  return &topics_;
}

// optional bytes data = 3;
void LogEntry::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogEntry::data() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.LogEntry.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogEntry::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.kframework.kevm.extvm.LogEntry.data)
}
 void LogEntry::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.kframework.kevm.extvm.LogEntry.data)
}
 void LogEntry::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.kframework.kevm.extvm.LogEntry.data)
}
 ::std::string* LogEntry::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.LogEntry.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogEntry::release_data() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.LogEntry.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogEntry::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.LogEntry.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VMQuery::kGetAccountFieldNumber;
const int VMQuery::kGetStorageDataFieldNumber;
const int VMQuery::kGetCodeFieldNumber;
const int VMQuery::kGetBlockhashFieldNumber;
const int VMQuery::kCallResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VMQuery::VMQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.kframework.kevm.extvm.VMQuery)
}

void VMQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  VMQuery_default_oneof_instance_->getaccount_ = const_cast< ::org::kframework::kevm::extvm::GetAccount*>(&::org::kframework::kevm::extvm::GetAccount::default_instance());
  VMQuery_default_oneof_instance_->getstoragedata_ = const_cast< ::org::kframework::kevm::extvm::GetStorageData*>(&::org::kframework::kevm::extvm::GetStorageData::default_instance());
  VMQuery_default_oneof_instance_->getcode_ = const_cast< ::org::kframework::kevm::extvm::GetCode*>(&::org::kframework::kevm::extvm::GetCode::default_instance());
  VMQuery_default_oneof_instance_->getblockhash_ = const_cast< ::org::kframework::kevm::extvm::GetBlockhash*>(&::org::kframework::kevm::extvm::GetBlockhash::default_instance());
  VMQuery_default_oneof_instance_->callresult_ = const_cast< ::org::kframework::kevm::extvm::CallResult*>(&::org::kframework::kevm::extvm::CallResult::default_instance());
}

VMQuery::VMQuery(const VMQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.kframework.kevm.extvm.VMQuery)
}

void VMQuery::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_query();
}

VMQuery::~VMQuery() {
  // @@protoc_insertion_point(destructor:org.kframework.kevm.extvm.VMQuery)
  SharedDtor();
}

void VMQuery::SharedDtor() {
  if (has_query()) {
    clear_query();
  }
  if (this != default_instance_) {
  }
}

void VMQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VMQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VMQuery_descriptor_;
}

const VMQuery& VMQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fmsg_2eproto();
  return *default_instance_;
}

VMQuery* VMQuery::default_instance_ = NULL;

VMQuery* VMQuery::New(::google::protobuf::Arena* arena) const {
  VMQuery* n = new VMQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VMQuery::clear_query() {
// @@protoc_insertion_point(one_of_clear_start:org.kframework.kevm.extvm.VMQuery)
  switch(query_case()) {
    case kGetAccount: {
      delete query_.getaccount_;
      break;
    }
    case kGetStorageData: {
      delete query_.getstoragedata_;
      break;
    }
    case kGetCode: {
      delete query_.getcode_;
      break;
    }
    case kGetBlockhash: {
      delete query_.getblockhash_;
      break;
    }
    case kCallResult: {
      delete query_.callresult_;
      break;
    }
    case QUERY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERY_NOT_SET;
}


void VMQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:org.kframework.kevm.extvm.VMQuery)
  clear_query();
}

bool VMQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.kframework.kevm.extvm.VMQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .org.kframework.kevm.extvm.GetAccount getAccount = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getaccount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_getStorageData;
        break;
      }

      // optional .org.kframework.kevm.extvm.GetStorageData getStorageData = 2;
      case 2: {
        if (tag == 18) {
         parse_getStorageData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getstoragedata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getCode;
        break;
      }

      // optional .org.kframework.kevm.extvm.GetCode getCode = 3;
      case 3: {
        if (tag == 26) {
         parse_getCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getcode()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_getBlockhash;
        break;
      }

      // optional .org.kframework.kevm.extvm.GetBlockhash getBlockhash = 4;
      case 4: {
        if (tag == 34) {
         parse_getBlockhash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getblockhash()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_callResult;
        break;
      }

      // optional .org.kframework.kevm.extvm.CallResult callResult = 5;
      case 5: {
        if (tag == 42) {
         parse_callResult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_callresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.kframework.kevm.extvm.VMQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.kframework.kevm.extvm.VMQuery)
  return false;
#undef DO_
}

void VMQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.kframework.kevm.extvm.VMQuery)
  // optional .org.kframework.kevm.extvm.GetAccount getAccount = 1;
  if (has_getaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *query_.getaccount_, output);
  }

  // optional .org.kframework.kevm.extvm.GetStorageData getStorageData = 2;
  if (has_getstoragedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *query_.getstoragedata_, output);
  }

  // optional .org.kframework.kevm.extvm.GetCode getCode = 3;
  if (has_getcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *query_.getcode_, output);
  }

  // optional .org.kframework.kevm.extvm.GetBlockhash getBlockhash = 4;
  if (has_getblockhash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *query_.getblockhash_, output);
  }

  // optional .org.kframework.kevm.extvm.CallResult callResult = 5;
  if (has_callresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *query_.callresult_, output);
  }

  // @@protoc_insertion_point(serialize_end:org.kframework.kevm.extvm.VMQuery)
}

::google::protobuf::uint8* VMQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.kframework.kevm.extvm.VMQuery)
  // optional .org.kframework.kevm.extvm.GetAccount getAccount = 1;
  if (has_getaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *query_.getaccount_, false, target);
  }

  // optional .org.kframework.kevm.extvm.GetStorageData getStorageData = 2;
  if (has_getstoragedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *query_.getstoragedata_, false, target);
  }

  // optional .org.kframework.kevm.extvm.GetCode getCode = 3;
  if (has_getcode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *query_.getcode_, false, target);
  }

  // optional .org.kframework.kevm.extvm.GetBlockhash getBlockhash = 4;
  if (has_getblockhash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *query_.getblockhash_, false, target);
  }

  // optional .org.kframework.kevm.extvm.CallResult callResult = 5;
  if (has_callresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *query_.callresult_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.kframework.kevm.extvm.VMQuery)
  return target;
}

int VMQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.kframework.kevm.extvm.VMQuery)
  int total_size = 0;

  switch (query_case()) {
    // optional .org.kframework.kevm.extvm.GetAccount getAccount = 1;
    case kGetAccount: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.getaccount_);
      break;
    }
    // optional .org.kframework.kevm.extvm.GetStorageData getStorageData = 2;
    case kGetStorageData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.getstoragedata_);
      break;
    }
    // optional .org.kframework.kevm.extvm.GetCode getCode = 3;
    case kGetCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.getcode_);
      break;
    }
    // optional .org.kframework.kevm.extvm.GetBlockhash getBlockhash = 4;
    case kGetBlockhash: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.getblockhash_);
      break;
    }
    // optional .org.kframework.kevm.extvm.CallResult callResult = 5;
    case kCallResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.callresult_);
      break;
    }
    case QUERY_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VMQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.kframework.kevm.extvm.VMQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VMQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VMQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.kframework.kevm.extvm.VMQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.kframework.kevm.extvm.VMQuery)
    MergeFrom(*source);
  }
}

void VMQuery::MergeFrom(const VMQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.kframework.kevm.extvm.VMQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.query_case()) {
    case kGetAccount: {
      mutable_getaccount()->::org::kframework::kevm::extvm::GetAccount::MergeFrom(from.getaccount());
      break;
    }
    case kGetStorageData: {
      mutable_getstoragedata()->::org::kframework::kevm::extvm::GetStorageData::MergeFrom(from.getstoragedata());
      break;
    }
    case kGetCode: {
      mutable_getcode()->::org::kframework::kevm::extvm::GetCode::MergeFrom(from.getcode());
      break;
    }
    case kGetBlockhash: {
      mutable_getblockhash()->::org::kframework::kevm::extvm::GetBlockhash::MergeFrom(from.getblockhash());
      break;
    }
    case kCallResult: {
      mutable_callresult()->::org::kframework::kevm::extvm::CallResult::MergeFrom(from.callresult());
      break;
    }
    case QUERY_NOT_SET: {
      break;
    }
  }
}

void VMQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.kframework.kevm.extvm.VMQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VMQuery::CopyFrom(const VMQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.kframework.kevm.extvm.VMQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VMQuery::IsInitialized() const {

  return true;
}

void VMQuery::Swap(VMQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VMQuery::InternalSwap(VMQuery* other) {
  std::swap(query_, other->query_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VMQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VMQuery_descriptor_;
  metadata.reflection = VMQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VMQuery

// optional .org.kframework.kevm.extvm.GetAccount getAccount = 1;
bool VMQuery::has_getaccount() const {
  return query_case() == kGetAccount;
}
void VMQuery::set_has_getaccount() {
  _oneof_case_[0] = kGetAccount;
}
void VMQuery::clear_getaccount() {
  if (has_getaccount()) {
    delete query_.getaccount_;
    clear_has_query();
  }
}
 const ::org::kframework::kevm::extvm::GetAccount& VMQuery::getaccount() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.VMQuery.getAccount)
  return has_getaccount()
      ? *query_.getaccount_
      : ::org::kframework::kevm::extvm::GetAccount::default_instance();
}
::org::kframework::kevm::extvm::GetAccount* VMQuery::mutable_getaccount() {
  if (!has_getaccount()) {
    clear_query();
    set_has_getaccount();
    query_.getaccount_ = new ::org::kframework::kevm::extvm::GetAccount;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.VMQuery.getAccount)
  return query_.getaccount_;
}
::org::kframework::kevm::extvm::GetAccount* VMQuery::release_getaccount() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.VMQuery.getAccount)
  if (has_getaccount()) {
    clear_has_query();
    ::org::kframework::kevm::extvm::GetAccount* temp = query_.getaccount_;
    query_.getaccount_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void VMQuery::set_allocated_getaccount(::org::kframework::kevm::extvm::GetAccount* getaccount) {
  clear_query();
  if (getaccount) {
    set_has_getaccount();
    query_.getaccount_ = getaccount;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.VMQuery.getAccount)
}

// optional .org.kframework.kevm.extvm.GetStorageData getStorageData = 2;
bool VMQuery::has_getstoragedata() const {
  return query_case() == kGetStorageData;
}
void VMQuery::set_has_getstoragedata() {
  _oneof_case_[0] = kGetStorageData;
}
void VMQuery::clear_getstoragedata() {
  if (has_getstoragedata()) {
    delete query_.getstoragedata_;
    clear_has_query();
  }
}
 const ::org::kframework::kevm::extvm::GetStorageData& VMQuery::getstoragedata() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.VMQuery.getStorageData)
  return has_getstoragedata()
      ? *query_.getstoragedata_
      : ::org::kframework::kevm::extvm::GetStorageData::default_instance();
}
::org::kframework::kevm::extvm::GetStorageData* VMQuery::mutable_getstoragedata() {
  if (!has_getstoragedata()) {
    clear_query();
    set_has_getstoragedata();
    query_.getstoragedata_ = new ::org::kframework::kevm::extvm::GetStorageData;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.VMQuery.getStorageData)
  return query_.getstoragedata_;
}
::org::kframework::kevm::extvm::GetStorageData* VMQuery::release_getstoragedata() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.VMQuery.getStorageData)
  if (has_getstoragedata()) {
    clear_has_query();
    ::org::kframework::kevm::extvm::GetStorageData* temp = query_.getstoragedata_;
    query_.getstoragedata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void VMQuery::set_allocated_getstoragedata(::org::kframework::kevm::extvm::GetStorageData* getstoragedata) {
  clear_query();
  if (getstoragedata) {
    set_has_getstoragedata();
    query_.getstoragedata_ = getstoragedata;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.VMQuery.getStorageData)
}

// optional .org.kframework.kevm.extvm.GetCode getCode = 3;
bool VMQuery::has_getcode() const {
  return query_case() == kGetCode;
}
void VMQuery::set_has_getcode() {
  _oneof_case_[0] = kGetCode;
}
void VMQuery::clear_getcode() {
  if (has_getcode()) {
    delete query_.getcode_;
    clear_has_query();
  }
}
 const ::org::kframework::kevm::extvm::GetCode& VMQuery::getcode() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.VMQuery.getCode)
  return has_getcode()
      ? *query_.getcode_
      : ::org::kframework::kevm::extvm::GetCode::default_instance();
}
::org::kframework::kevm::extvm::GetCode* VMQuery::mutable_getcode() {
  if (!has_getcode()) {
    clear_query();
    set_has_getcode();
    query_.getcode_ = new ::org::kframework::kevm::extvm::GetCode;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.VMQuery.getCode)
  return query_.getcode_;
}
::org::kframework::kevm::extvm::GetCode* VMQuery::release_getcode() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.VMQuery.getCode)
  if (has_getcode()) {
    clear_has_query();
    ::org::kframework::kevm::extvm::GetCode* temp = query_.getcode_;
    query_.getcode_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void VMQuery::set_allocated_getcode(::org::kframework::kevm::extvm::GetCode* getcode) {
  clear_query();
  if (getcode) {
    set_has_getcode();
    query_.getcode_ = getcode;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.VMQuery.getCode)
}

// optional .org.kframework.kevm.extvm.GetBlockhash getBlockhash = 4;
bool VMQuery::has_getblockhash() const {
  return query_case() == kGetBlockhash;
}
void VMQuery::set_has_getblockhash() {
  _oneof_case_[0] = kGetBlockhash;
}
void VMQuery::clear_getblockhash() {
  if (has_getblockhash()) {
    delete query_.getblockhash_;
    clear_has_query();
  }
}
 const ::org::kframework::kevm::extvm::GetBlockhash& VMQuery::getblockhash() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.VMQuery.getBlockhash)
  return has_getblockhash()
      ? *query_.getblockhash_
      : ::org::kframework::kevm::extvm::GetBlockhash::default_instance();
}
::org::kframework::kevm::extvm::GetBlockhash* VMQuery::mutable_getblockhash() {
  if (!has_getblockhash()) {
    clear_query();
    set_has_getblockhash();
    query_.getblockhash_ = new ::org::kframework::kevm::extvm::GetBlockhash;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.VMQuery.getBlockhash)
  return query_.getblockhash_;
}
::org::kframework::kevm::extvm::GetBlockhash* VMQuery::release_getblockhash() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.VMQuery.getBlockhash)
  if (has_getblockhash()) {
    clear_has_query();
    ::org::kframework::kevm::extvm::GetBlockhash* temp = query_.getblockhash_;
    query_.getblockhash_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void VMQuery::set_allocated_getblockhash(::org::kframework::kevm::extvm::GetBlockhash* getblockhash) {
  clear_query();
  if (getblockhash) {
    set_has_getblockhash();
    query_.getblockhash_ = getblockhash;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.VMQuery.getBlockhash)
}

// optional .org.kframework.kevm.extvm.CallResult callResult = 5;
bool VMQuery::has_callresult() const {
  return query_case() == kCallResult;
}
void VMQuery::set_has_callresult() {
  _oneof_case_[0] = kCallResult;
}
void VMQuery::clear_callresult() {
  if (has_callresult()) {
    delete query_.callresult_;
    clear_has_query();
  }
}
 const ::org::kframework::kevm::extvm::CallResult& VMQuery::callresult() const {
  // @@protoc_insertion_point(field_get:org.kframework.kevm.extvm.VMQuery.callResult)
  return has_callresult()
      ? *query_.callresult_
      : ::org::kframework::kevm::extvm::CallResult::default_instance();
}
::org::kframework::kevm::extvm::CallResult* VMQuery::mutable_callresult() {
  if (!has_callresult()) {
    clear_query();
    set_has_callresult();
    query_.callresult_ = new ::org::kframework::kevm::extvm::CallResult;
  }
  // @@protoc_insertion_point(field_mutable:org.kframework.kevm.extvm.VMQuery.callResult)
  return query_.callresult_;
}
::org::kframework::kevm::extvm::CallResult* VMQuery::release_callresult() {
  // @@protoc_insertion_point(field_release:org.kframework.kevm.extvm.VMQuery.callResult)
  if (has_callresult()) {
    clear_has_query();
    ::org::kframework::kevm::extvm::CallResult* temp = query_.callresult_;
    query_.callresult_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void VMQuery::set_allocated_callresult(::org::kframework::kevm::extvm::CallResult* callresult) {
  clear_query();
  if (callresult) {
    set_has_callresult();
    query_.callresult_ = callresult;
  }
  // @@protoc_insertion_point(field_set_allocated:org.kframework.kevm.extvm.VMQuery.callResult)
}

bool VMQuery::has_query() const {
  return query_case() != QUERY_NOT_SET;
}
void VMQuery::clear_has_query() {
  _oneof_case_[0] = QUERY_NOT_SET;
}
VMQuery::QueryCase VMQuery::query_case() const {
  return VMQuery::QueryCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace extvm
}  // namespace kevm
}  // namespace kframework
}  // namespace org

// @@protoc_insertion_point(global_scope)
